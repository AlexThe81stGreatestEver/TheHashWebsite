<?php


define("HASHING_COUNTS","SELECT
	HASHERS.HASHER_NAME AS NAME,
	COUNT(0) AS VALUE
FROM
	HASHERS
	JOIN HASHINGS ON HASHERS.HASHER_KY = HASHINGS.HASHER_KY
	JOIN HASHES on HASHINGS.HASH_KY = HASHES.HASH_KY
WHERE HASHES.KENNEL_KY = ?
GROUP BY HASHERS.HASHER_NAME
ORDER BY VALUE DESC
");

define("HARING_COUNTS","SELECT
	HASHERS.HASHER_NAME AS NAME,
	COUNT(0) AS VALUE
FROM
	HASHERS
	JOIN HARINGS ON HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY
	JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
WHERE HASHES.KENNEL_KY = ?
GROUP BY HASHERS.HASHER_NAME
ORDER BY VALUE DESC"
);

define("NON_HYPER_HARING_COUNTS","SELECT
	HASHERS.HASHER_NAME AS NAME,
	COUNT(0) AS VALUE
FROM
	HASHERS
	JOIN HARINGS ON HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY
	JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
WHERE
	HASHES.KENNEL_KY = ? AND
    HASHES.IS_HYPER = 0
GROUP BY HASHERS.HASHER_NAME
ORDER BY VALUE DESC");

define("HARING_PERCENTAGES_HYPERS_VS_ALL","SELECT
	HASHERS.HASHER_NAME,
    HASHERS.HASHER_KY,
    ALL_HARING_COUNT_TEMP_TABLE.ALL_HARING_COUNT,
    HYPER_HARING_COUNT_TEMP_TABLE.HYPER_HARING_COUNT,
    ((HYPER_HARING_COUNT_TEMP_TABLE.HYPER_HARING_COUNT / ALL_HARING_COUNT_TEMP_TABLE.ALL_HARING_COUNT) * 100) AS HYPER_HARINGS_PERCENTAGE,
    (((ALL_HARING_COUNT_TEMP_TABLE.ALL_HARING_COUNT - HYPER_HARING_COUNT_TEMP_TABLE.HYPER_HARING_COUNT) / ALL_HARING_COUNT_TEMP_TABLE.ALL_HARING_COUNT) * 100) AS NON_HYPER_HARINGS_PERCENTAGE
FROM
	HASHERS
JOIN (SELECT
		HARINGS.HARINGS_HASHER_KY AS HARINGS_HASHER_KY,
		COUNT(HARINGS.HARINGS_HASHER_KY) AS ALL_HARING_COUNT
        FROM
            HARINGS
						JOIN HASHES on HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
						WHERE HASHES.KENNEL_KY = ?
        GROUP BY HARINGS.HARINGS_HASHER_KY) ALL_HARING_COUNT_TEMP_TABLE ON (HASHERS.HASHER_KY = ALL_HARING_COUNT_TEMP_TABLE.HARINGS_HASHER_KY)
JOIN (SELECT
		HARINGS.HARINGS_HASHER_KY AS HARINGS_HASHER_KY,
		COUNT(HARINGS.HARINGS_HASHER_KY) AS HYPER_HARING_COUNT
        FROM
            HARINGS JOIN HASHES on HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
				WHERE HASHES.IS_HYPER = 1
					AND HASHES.KENNEL_KY = ?
        GROUP BY HARINGS.HARINGS_HASHER_KY) HYPER_HARING_COUNT_TEMP_TABLE ON (HASHERS.HASHER_KY = HYPER_HARING_COUNT_TEMP_TABLE.HARINGS_HASHER_KY)
ORDER BY (((ALL_HARING_COUNT_TEMP_TABLE.ALL_HARING_COUNT - HYPER_HARING_COUNT_TEMP_TABLE.HYPER_HARING_COUNT) / ALL_HARING_COUNT_TEMP_TABLE.ALL_HARING_COUNT) * 100) DESC
");


define("HASHER_COUNTS_BY_YEAR","SELECT HASHERS.HASHER_NAME AS HASHER_NAME,count(*) AS THE_COUNT
  FROM (
    HASHERS
      JOIN HASHINGS ON(HASHERS.HASHER_KY = HASHINGS.HASHER_KY))
      JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  WHERE
    YEAR(HASHES.EVENT_DATE) = ? AND HASHES.KENNEL_KY = ?
  GROUP BY hashers.HASHER_NAME ORDER BY THE_COUNT DESC"
);


define("TOTAL_HARE_COUNTS_BY_YEAR","SELECT HASHERS.HASHER_NAME AS HASHER_NAME,count(*) AS THE_COUNT
FROM (
	HASHERS
    JOIN HARINGS ON(HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY))
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
WHERE
	YEAR(HASHES.EVENT_DATE) = ? AND HASHES.KENNEL_KY = ?
GROUP BY HASHERS.HASHER_NAME ORDER BY THE_COUNT DESC");

define("HYPER_HARE_COUNTS_BY_YEAR","SELECT HASHERS.HASHER_NAME AS HASHER_NAME,count(*) AS THE_COUNT
FROM (
	HASHERS
    JOIN HARINGS ON(HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY))
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
WHERE
	YEAR(HASHES.EVENT_DATE) = ? AND
    HASHES.IS_HYPER = 1 AND HASHES.KENNEL_KY = ?
GROUP BY HASHERS.HASHER_NAME ORDER BY THE_COUNT DESC");

define("NONHYPER_HARE_COUNTS_BY_YEAR","SELECT HASHERS.HASHER_NAME AS HASHER_NAME,count(*) AS THE_COUNT
FROM (
	HASHERS
    JOIN HARINGS ON(HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY))
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
WHERE
	YEAR(HASHES.EVENT_DATE) = ? AND
    HASHES.IS_HYPER = 0 AND HASHES.KENNEL_KY = ?
GROUP BY HASHERS.HASHER_NAME ORDER BY THE_COUNT DESC");

define ("SELECT_HASHERS_VIRGIN_HASH","SELECT
	HASHES.HASH_KY,
    KENNEL_KY,
    KENNEL_EVENT_NUMBER,
    EVENT_DATE,
    EVENT_LOCATION,
    EVENT_CITY,
    EVENT_STATE,
    SPECIAL_EVENT_DESCRIPTION,
    VIRGIN_COUNT,
    IS_HYPER,
    DATE_FORMAT(EVENT_DATE,\"%m/%d/%Y\") AS EVENT_DATE_FORMATTED,
	FLOOR(DATEDIFF(CURDATE(),EVENT_DATE)/365) YEARS_SINCE_EVENT,
    FLOOR((DATEDIFF(CURDATE(),EVENT_DATE)/365 - FLOOR(DATEDIFF(CURDATE(),EVENT_DATE)/365))* 12) MONTHS_SINCE_EVENT,
    CEILING((((DATEDIFF(CURDATE(),EVENT_DATE)/365 - FLOOR(DATEDIFF(CURDATE(),EVENT_DATE)/365))* 12)
            - FLOOR((DATEDIFF(CURDATE(),EVENT_DATE)/365 - FLOOR(DATEDIFF(CURDATE(),EVENT_DATE)/365))* 12))* 30) DAYS_SINCE_EVENT
FROM
	HASHES
    JOIN HASHINGS ON HASHES.HASH_KY = HASHINGS.HASH_KY
WHERE
	HASHINGS.HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
ORDER BY
	HASHES.EVENT_DATE ASC
LIMIT 1");

define ("SELECT_HASHERS_MOST_RECENT_HASH","SELECT
	HASHES.HASH_KY,
    KENNEL_KY,
    KENNEL_EVENT_NUMBER,
    EVENT_DATE,
    EVENT_LOCATION,
    EVENT_CITY,
    EVENT_STATE,
    SPECIAL_EVENT_DESCRIPTION,
    VIRGIN_COUNT,
    IS_HYPER,
    DATE_FORMAT(EVENT_DATE,\"%m/%d/%Y\") AS EVENT_DATE_FORMATTED,
	FLOOR(DATEDIFF(CURDATE(),EVENT_DATE)/365) YEARS_SINCE_EVENT,
    FLOOR((DATEDIFF(CURDATE(),EVENT_DATE)/365 - FLOOR(DATEDIFF(CURDATE(),EVENT_DATE)/365))* 12) MONTHS_SINCE_EVENT,
    CEILING((((DATEDIFF(CURDATE(),EVENT_DATE)/365 - FLOOR(DATEDIFF(CURDATE(),EVENT_DATE)/365))* 12)
            - FLOOR((DATEDIFF(CURDATE(),EVENT_DATE)/365 - FLOOR(DATEDIFF(CURDATE(),EVENT_DATE)/365))* 12))* 30) DAYS_SINCE_EVENT
FROM
	HASHES
    JOIN HASHINGS ON HASHES.HASH_KY = HASHINGS.HASH_KY
WHERE
	HASHINGS.HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
ORDER BY
	HASHES.EVENT_DATE DESC
LIMIT 1");




define ("HASHER_HASH_COUNTS_BY_YEAR","SELECT YEAR(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HASHINGS
    JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  WHERE
	HASHINGS.HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY YEAR(EVENT_DATE)
ORDER BY YEAR(EVENT_DATE)");

define("HASHER_HASH_COUNTS_BY_MONTH","SELECT MONTH(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HASHINGS
    JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  WHERE
	HASHINGS.HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY MONTH(EVENT_DATE)
ORDER BY MONTH(EVENT_DATE)");

define("HASHER_HASH_COUNTS_BY_MONTH_NAME","SELECT
	THE_VALUE,
    THE_COUNT ,
	CASE THE_VALUE
		WHEN '1' THEN 'January'
		WHEN '2' THEN 'February'
		WHEN '3' THEN 'March'
		WHEN '4' THEN 'April'
		WHEN '5' THEN 'May'
		WHEN '6' THEN 'June'
		WHEN '7' THEN 'July'
		WHEN '8' THEN 'August'
		WHEN '9' THEN 'September'
		WHEN '10' THEN 'October'
		WHEN '11' THEN 'November'
		WHEN '12' THEN 'December'
    END AS MONTH_NAME
FROM
(
	SELECT MONTH(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
	FROM
		HASHINGS
		JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
	WHERE
		HASHINGS.HASHER_KY = ? AND
		HASHES.KENNEL_KY = ?
	GROUP BY MONTH(EVENT_DATE)
	ORDER BY MONTH(EVENT_DATE)
) TEMP_TABLE");

define("HASHER_HASH_COUNTS_BY_QUARTER","SELECT QUARTER(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HASHINGS
    JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  WHERE
	HASHINGS.HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY QUARTER(EVENT_DATE)
ORDER BY QUARTER(EVENT_DATE)
");

define("HASHER_HASH_COUNTS_BY_DAYNAME","SELECT DAYNAME(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HASHINGS
    JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  WHERE
	HASHINGS.HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY DAYNAME(EVENT_DATE)
ORDER BY DAYNAME(EVENT_DATE)
;");

define("HASHER_HASH_COUNTS_BY_STATE","SELECT HASHES.EVENT_STATE AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HASHINGS
    JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  WHERE
	HASHINGS.HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY HASHES.EVENT_STATE
ORDER BY THE_COUNT DESC"
);

define("HASHER_HASH_COUNTS_BY_CITY","SELECT HASHES.EVENT_CITY AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HASHINGS
    JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  WHERE
	HASHINGS.HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY HASHES.EVENT_CITY
ORDER BY THE_COUNT DESC"
);

define("HASHER_ALL_HARING_COUNTS_BY_YEAR","SELECT YEAR(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY YEAR(EVENT_DATE)
ORDER BY YEAR(EVENT_DATE)");

define("HASHER_ALL_HARING_COUNTS_BY_MONTH","SELECT MONTH(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY MONTH(EVENT_DATE)
ORDER BY MONTH(EVENT_DATE)");

define("HASHER_ALL_HARING_COUNTS_BY_QUARTER","SELECT QUARTER(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY QUARTER(EVENT_DATE)
ORDER BY QUARTER(EVENT_DATE)");


define("HASHER_ALL_HARING_COUNTS_BY_DAYNAME","SELECT DAYNAME(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY DAYNAME(EVENT_DATE)
ORDER BY DAYNAME(EVENT_DATE)");

define("HASHER_ALL_HARING_COUNTS_BY_STATE","SELECT HASHES.EVENT_STATE AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY HASHES.EVENT_STATE
ORDER BY THE_COUNT DESC");

define("HASHER_ALL_HARING_COUNTS_BY_CITY","SELECT HASHES.EVENT_CITY AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY HASHES.EVENT_CITY
ORDER BY THE_COUNT DESC");

define("HASHER_NONHYPER_HARING_COUNTS_BY_YEAR","SELECT YEAR(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ? AND
		HASHES.IS_HYPER = 0
GROUP BY YEAR(EVENT_DATE)
ORDER BY YEAR(EVENT_DATE)");

define("HASHER_NONHYPER_HARING_COUNTS_BY_MONTH","SELECT MONTH(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ? AND
		HASHES.IS_HYPER = 0
GROUP BY MONTH(EVENT_DATE)
ORDER BY MONTH(EVENT_DATE)");

define("HASHER_NONHYPER_HARING_COUNTS_BY_QUARTER","SELECT QUARTER(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ? AND
		HASHES.IS_HYPER = 0
GROUP BY QUARTER(EVENT_DATE)
ORDER BY QUARTER(EVENT_DATE)");


define("HASHER_NONHYPER_HARING_COUNTS_BY_DAYNAME","SELECT DAYNAME(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ? AND
		HASHES.IS_HYPER = 0
GROUP BY DAYNAME(EVENT_DATE)
ORDER BY DAYNAME(EVENT_DATE)");

define("HASHER_NONHYPER_HARING_COUNTS_BY_STATE","SELECT HASHES.EVENT_STATE AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ? AND
		HASHES.IS_HYPER = 0
GROUP BY HASHES.EVENT_STATE
ORDER BY THE_COUNT DESC");

define("HASHER_NONHYPER_HARING_COUNTS_BY_CITY","SELECT HASHES.EVENT_CITY AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ? AND
		HASHES.IS_HYPER =0
GROUP BY HASHES.EVENT_CITY
ORDER BY THE_COUNT DESC");

define("HASHER_HYPER_HARING_COUNTS_BY_CITY","SELECT HASHES.EVENT_CITY AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
	HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
	HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ? AND
		HASHES.IS_HYPER =1
GROUP BY HASHES.EVENT_CITY
ORDER BY THE_COUNT DESC");

define("COHARE_COUNT_BY_HARE","SELECT
      	TEMPTABLE.HASHER_NAME AS THE_VALUE,
          COUNT(*) AS THE_COUNT
      FROM
      	HARINGS
          JOIN HASHERS ON HARINGS.HARINGS_HASHER_KY = HASHERS.HASHER_KY
          JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
          JOIN (
						SELECT
								HARINGS_HASH_KY,
								HASHER_NAME,
								HARINGS_HASHER_KY
						FROM
								HARINGS
						JOIN HASHERS ON HARINGS.HARINGS_HASHER_KY = HASHERS.HASHER_KY
		        JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
		        WHERE
								HASHES.KENNEL_KY = ?
					)
          TEMPTABLE ON HARINGS.HARINGS_HASH_KY = TEMPTABLE.HARINGS_HASH_KY
      WHERE
      	HARINGS.HARINGS_HASHER_KY = ?
          AND TEMPTABLE.HARINGS_HASHER_KY <> ?
          AND HASHES.IS_HYPER IN (?,?)
      GROUP BY TEMPTABLE.HASHER_NAME
      ORDER BY THE_COUNT DESC");

define("HARING_PERCENTAGE_ALL_HASHES","SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	hash_count_temp_table.HASH_COUNT AS HASH_COUNT,
	haring_count_temp_table.HARING_COUNT AS HARING_COUNT,
	((haring_count_temp_table.HARING_COUNT / hash_count_temp_table.HASH_COUNT) * 100) AS HARE_PERCENTAGE
FROM
	((HASHERS
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = hash_count_temp_table.HASHER_KY)))
	JOIN (
		SELECT
			HARINGS.HARINGS_HASHER_KY AS HARINGS_HASHER_KY,
			COUNT(HARINGS.HARINGS_HASHER_KY) AS HARING_COUNT
		FROM
			HARINGS
            JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HARINGS.HARINGS_HASHER_KY
        ) HARING_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = haring_count_temp_table.HARINGS_HASHER_KY)))
WHERE
	(hash_count_temp_table.HASH_COUNT >= ?)
ORDER BY ((haring_count_temp_table.HARING_COUNT / hash_count_temp_table.HASH_COUNT) * 100) DESC");

define("HARING_PERCENTAGE_NON_HYPER_HASHES","SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	hash_count_temp_table.HASH_COUNT AS HASH_COUNT,
	haring_count_temp_table.HARING_COUNT AS HARING_COUNT,
	((haring_count_temp_table.HARING_COUNT / hash_count_temp_table.HASH_COUNT) * 100) AS HARE_PERCENTAGE
FROM
	((HASHERS
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = hash_count_temp_table.HASHER_KY)))
	JOIN (
		SELECT
			HARINGS.HARINGS_HASHER_KY AS HARINGS_HASHER_KY,
			COUNT(HARINGS.HARINGS_HASHER_KY) AS HARING_COUNT
		FROM
			HARINGS
            JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
			AND HASHES.IS_HYPER=0
		GROUP BY HARINGS.HARINGS_HASHER_KY
        ) HARING_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = haring_count_temp_table.HARINGS_HASHER_KY)))
WHERE
	(hash_count_temp_table.HASH_COUNT >= ?)
ORDER BY ((haring_count_temp_table.HARING_COUNT / hash_count_temp_table.HASH_COUNT) * 100) DESC");

DEFINE("LOWEST_HASH_ATTENDANCE_BY_HARE","SELECT
	HASHERS.HASHER_NAME AS NAME,
	MIN(temptable.THE_COUNT) AS VALUE
FROM
	(((HASHERS
	JOIN HARINGS ON ((HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY)))
	JOIN HASHES ON ((HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY)))
	JOIN
    (
		SELECT HASHINGS.HASH_KY AS THE_HASH_KEY,COUNT(0) AS THE_COUNT
		FROM
			HASHES
			JOIN HASHINGS ON ((HASHES.HASH_KY = HASHINGS.HASH_KY))
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASH_KY
	) TEMPTABLE ON ((HASHES.HASH_KY = temptable.THE_HASH_KEY)))
GROUP BY HASHERS.HASHER_NAME
ORDER BY VALUE");

DEFINE("HIGHEST_HASH_ATTENDANCE_BY_HARE","SELECT
	HASHERS.HASHER_NAME AS NAME,
	MAX(temptable.THE_COUNT) AS VALUE
FROM
	(((HASHERS
	JOIN HARINGS ON ((HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY)))
	JOIN HASHES ON ((HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY)))
	JOIN
    (
		SELECT HASHINGS.HASH_KY AS THE_HASH_KEY,COUNT(0) AS THE_COUNT
		FROM
			HASHES
			JOIN HASHINGS ON ((HASHES.HASH_KY = HASHINGS.HASH_KY))
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASH_KY
	) TEMPTABLE ON ((HASHES.HASH_KY = temptable.THE_HASH_KEY)))
GROUP BY HASHERS.HASHER_NAME
ORDER BY VALUE DESC");

DEFINE("AVERAGE_HASH_ATTENDANCE_BY_HARE","SELECT
	HASHERS.HASHER_NAME AS NAME,
	AVG(temptable.THE_COUNT) AS VALUE
FROM
	(((HASHERS
	JOIN HARINGS ON ((HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY)))
	JOIN HASHES ON ((HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY)))
	JOIN
    (
		SELECT HASHINGS.HASH_KY AS THE_HASH_KEY,COUNT(0) AS THE_COUNT
		FROM
			HASHES
			JOIN HASHINGS ON ((HASHES.HASH_KY = HASHINGS.HASH_KY))
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASH_KY
	) TEMPTABLE ON ((HASHES.HASH_KY = temptable.THE_HASH_KEY)))
GROUP BY HASHERS.HASHER_NAME
ORDER BY VALUE DESC");

DEFINE("GRANDTOTAL_NONDISTINCT_HASH_ATTENDANCE_BY_HARE","SELECT
	HASHERS.HASHER_NAME AS NAME,
	SUM(temptable.THE_COUNT) AS VALUE
FROM
	(((HASHERS
	JOIN HARINGS ON ((HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY)))
	JOIN HASHES ON ((HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY)))
	JOIN
    (
		SELECT
			HASHINGS.HASH_KY AS THE_HASH_KEY,
			COUNT(0) AS THE_COUNT
		FROM
			HASHES
			JOIN HASHINGS ON HASHES.HASH_KY = HASHINGS.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASH_KY
	) TEMPTABLE ON HASHES.HASH_KY = temptable.THE_HASH_KEY)
GROUP BY HASHERS.HASHER_NAME
ORDER BY VALUE DESC");

DEFINE ("GRANDTOTAL_DISTINCT_HASH_ATTENDANCE_BY_HARE","SELECT
	HASHERS.HASHER_NAME AS NAME,
	COUNT(DISTINCT HASHINGS.HASHER_KY) AS VALUE
FROM
	HASHERS
	JOIN HARINGS ON HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY
	JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
	JOIN HASHINGS ON HASHES.HASH_KY = HASHINGS.HASH_KY
WHERE HASHES.KENNEL_KY = ?
GROUP BY HASHERS.HASHER_NAME
ORDER BY VALUE DESC");



DEFINE("PENDING_HARE_ANALVERSARIES","SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	(COUNT(0) + ?) AS THE_COUNT_INCREMENTED,
	TIMESTAMPDIFF(YEAR,
		MAX(HASHES.EVENT_DATE),
		CURDATE()) AS YEARS_ABSENCE
FROM
	((HASHERS
	JOIN HARINGS ON ((HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY)))
	JOIN HASHES ON ((HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY)))
WHERE HASHES.KENNEL_KY = ?
GROUP BY HASHERS.HASHER_NAME
HAVING ((((THE_COUNT_INCREMENTED % 5) = 0)
	OR ((THE_COUNT_INCREMENTED % 69) = 0)
	OR ((THE_COUNT_INCREMENTED % 666) = 0)
	OR (((THE_COUNT_INCREMENTED - 69) % 100) = 0))
	AND (YEARS_ABSENCE < ?))
ORDER BY THE_COUNT_INCREMENTED DESC");

DEFINE("PENDING_HASHER_ANALVERSARIES","SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	(COUNT(0) + ?) AS THE_COUNT_INCREMENTED,
	TIMESTAMPDIFF(YEAR,
		MAX(HASHES.EVENT_DATE),
		CURDATE()) AS YEARS_ABSENCE
FROM
	((HASHERS
	JOIN HASHINGS ON ((HASHERS.HASHER_KY = HASHINGS.HASHER_KY)))
	JOIN HASHES ON ((HASHINGS.HASH_KY = HASHES.HASH_KY)))
WHERE
	(HASHERS.DECEASED = 0)
    AND HASHES.KENNEL_KY = ?
GROUP BY HASHERS.HASHER_NAME
HAVING ((((THE_COUNT_INCREMENTED % 5) = 0)
	OR ((THE_COUNT_INCREMENTED % 69) = 0)
	OR ((THE_COUNT_INCREMENTED % 666) = 0)
	OR (((THE_COUNT_INCREMENTED - 69) % 100) = 0))
	AND (YEARS_ABSENCE < ?))
ORDER BY THE_COUNT_INCREMENTED DESC");


DEFINE("LONGEST_HASHING_CAREER_IN_DAYS","SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	HASHERS.HASHER_KY AS HASHER_KY,
	hash_count_temp_table.HASH_COUNT AS HASH_COUNT,
	FIRST_HASH_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HASH_DATE,
    FIRST_HASH_EVENT_TABLE.FIRST_HASH_KEY AS FIRST_HASH_KEY,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_DATE AS LATEST_HASH_DATE,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_KEY AS LATEST_HASH_KEY,
    DATEDIFF(LATEST_HASH_DATE,FIRST_HASH_DATE) DIFFERENCE,
    ((DATEDIFF(LATEST_HASH_DATE,FIRST_HASH_DATE)) / HASH_COUNT) AS DAYS_BETWEEN_HASHES
FROM
	((HASHERS
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = hash_count_temp_table.HASHER_KY)))
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE,
            MIN(HASHES.HASH_KY) AS FIRST_HASH_KEY
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) FIRST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = FIRST_HASH_EVENT_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			MAX(HASHES.EVENT_DATE) AS LATEST_HASH_DATE,
            MAX(HASHES.HASH_KY) AS LATEST_HASH_KEY
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) LATEST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = LATEST_HASH_EVENT_TABLE.HASHER_KY))
WHERE
	(hash_count_temp_table.HASH_COUNT >= ?)
ORDER BY XORDERCOLUMNX XUPORDOWNX");

DEFINE("HIGHEST_NUMBER_OF_DAYS_BETWEEN_HASHES","SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	hash_count_temp_table.HASH_COUNT AS HASH_COUNT,
	FIRST_HASH_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HASH_DATE,
    FIRST_HASH_EVENT_TABLE.FIRST_HASH_KEY AS FIRST_HASH_KEY,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_DATE AS LATEST_HASH_DATE,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_KEY AS LATEST_HASH_KEY,
    DATEDIFF(LATEST_HASH_DATE,FIRST_HASH_DATE) DIFFERENCE,
    ((DATEDIFF(LATEST_HASH_DATE,FIRST_HASH_DATE)) / HASH_COUNT) AS DAYS_BETWEEN_HASHES
FROM
	((HASHERS
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = hash_count_temp_table.HASHER_KY)))
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE,
            MIN(HASHES.HASH_KY) AS FIRST_HASH_KEY
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) FIRST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = FIRST_HASH_EVENT_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			MAX(HASHES.EVENT_DATE) AS LATEST_HASH_DATE,
            MAX(HASHES.HASH_KY) AS LATEST_HASH_KEY
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) LATEST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = LATEST_HASH_EVENT_TABLE.HASHER_KY))
WHERE
	(hash_count_temp_table.HASH_COUNT >= 1)
ORDER BY DAYS_BETWEEN_HASHES DESC");

DEFINE("LOWEST_NUMBER_OF_DAYS_BETWEEN_HASHES","SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	hash_count_temp_table.HASH_COUNT AS HASH_COUNT,
	FIRST_HASH_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HASH_DATE,
    FIRST_HASH_EVENT_TABLE.FIRST_HASH_KEY AS FIRST_HASH_KEY,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_DATE AS LATEST_HASH_DATE,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_KEY AS LATEST_HASH_KEY,
    DATEDIFF(LATEST_HASH_DATE,FIRST_HASH_DATE) DIFFERENCE,
    ((DATEDIFF(LATEST_HASH_DATE,FIRST_HASH_DATE)) / HASH_COUNT) AS DAYS_BETWEEN_HASHES
FROM
	((HASHERS
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = hash_count_temp_table.HASHER_KY)))
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE,
            MIN(HASHES.HASH_KY) AS FIRST_HASH_KEY
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) FIRST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = FIRST_HASH_EVENT_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			MAX(HASHES.EVENT_DATE) AS LATEST_HASH_DATE,
            MAX(HASHES.HASH_KY) AS LATEST_HASH_KEY
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) LATEST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = LATEST_HASH_EVENT_TABLE.HASHER_KY))
WHERE
	(hash_count_temp_table.HASH_COUNT >= 1)
ORDER BY DAYS_BETWEEN_HASHES ASC");

DEFINE("INDIVIDUAL_HASHING_CAREER_NUMBERS","SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	hash_count_temp_table.HASH_COUNT AS HASH_COUNT,
	FIRST_HASH_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HASH_DATE,
    FIRST_HASH_EVENT_TABLE.FIRST_HASH_KEY AS FIRST_HASH_KEY,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_DATE AS LATEST_HASH_DATE,
    LATEST_HASH_EVENT_TABLE.LATEST_HASH_KEY AS LATEST_HASH_KEY,
    DATEDIFF(LATEST_HASH_DATE,FIRST_HASH_DATE) DIFFERENCE,
    ((DATEDIFF(LATEST_HASH_DATE,FIRST_HASH_DATE)) / HASH_COUNT) AS DAYS_BETWEEN_HASHES
FROM
	((HASHERS
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = hash_count_temp_table.HASHER_KY)))
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE,
            MIN(HASHES.HASH_KY) AS FIRST_HASH_KEY
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) FIRST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = FIRST_HASH_EVENT_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HASHINGS.HASHER_KY AS HASHER_KY,
			MAX(HASHES.EVENT_DATE) AS LATEST_HASH_DATE,
            MAX(HASHES.HASH_KY) AS LATEST_HASH_KEY
		FROM
			HASHINGS
            JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ?
		GROUP BY HASHINGS.HASHER_KY
        ) LATEST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = LATEST_HASH_EVENT_TABLE.HASHER_KY))
WHERE
	(hash_count_temp_table.HASH_COUNT >= 1)
    AND HASHERS.HASHER_KY = ?
ORDER BY DAYS_BETWEEN_HASHES ASC");

DEFINE("HIGHEST_NUMBER_OF_DAYS_BETWEEN_HARINGS","SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	HARING_COUNT_TEMP_TABLE.HARING_COUNT AS HARING_COUNT,
	FIRST_HARING_EVENT_TABLE.FIRST_HARING_DATE AS FIRST_HARING_DATE,
    FIRST_HARING_EVENT_TABLE.FIRST_HARING_KEY AS FIRST_HARING_KEY,
    LATEST_HARING_EVENT_TABLE.LATEST_HARING_DATE AS LATEST_HARING_DATE,
    LATEST_HARING_EVENT_TABLE.LATEST_HARING_KEY AS LATEST_HARING_KEY,
    DATEDIFF(LATEST_HARING_DATE,FIRST_HARING_DATE) DIFFERENCE,
    ((DATEDIFF(LATEST_HARING_DATE,FIRST_HARING_DATE)) / HARING_COUNT) AS DAYS_BETWEEN_HARINGS
FROM
	((HASHERS
	JOIN (
		SELECT
			HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
			COUNT(HARINGS.HARINGS_HASHER_KY) AS HARING_COUNT
		FROM
			HARINGS
            JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ? AND
            HASHES.IS_HYPER IN (?,?)
		GROUP BY HARINGS.HARINGS_HASHER_KY
        ) HARING_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HARING_COUNT_TEMP_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
			MIN(HASHES.EVENT_DATE) AS FIRST_HARING_DATE,
            MIN(HASHES.HASH_KY) AS FIRST_HARING_KEY
		FROM
			HARINGS
            JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ? AND
            HASHES.IS_HYPER IN (?,?)
		GROUP BY HARINGS.HARINGS_HASHER_KY
        ) FIRST_HARING_EVENT_TABLE ON ((HASHERS.HASHER_KY = FIRST_HARING_EVENT_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
			MAX(HASHES.EVENT_DATE) AS LATEST_HARING_DATE,
            MAX(HASHES.HASH_KY) AS LATEST_HARING_KEY
		FROM
			HARINGS
            JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ? AND
            HASHES.IS_HYPER IN (?,?)
		GROUP BY HARINGS.HARINGS_HASHER_KY
        ) LATEST_HARING_EVENT_TABLE ON ((HASHERS.HASHER_KY = LATEST_HARING_EVENT_TABLE.HASHER_KY))
WHERE
	(HARING_COUNT_TEMP_TABLE.HARING_COUNT >= ?)
ORDER BY DAYS_BETWEEN_HARINGS DESC");


DEFINE("LOWEST_NUMBER_OF_DAYS_BETWEEN_HARINGS","SELECT
	HASHERS.HASHER_NAME AS HASHER_NAME,
	HASHERS.HASHER_KY AS HASHER_KY,
	HARING_COUNT_TEMP_TABLE.HARING_COUNT AS HARING_COUNT,
	FIRST_HARING_EVENT_TABLE.FIRST_HARING_DATE AS FIRST_HARING_DATE,
    FIRST_HARING_EVENT_TABLE.FIRST_HARING_KEY AS FIRST_HARING_KEY,
    LATEST_HARING_EVENT_TABLE.LATEST_HARING_DATE AS LATEST_HARING_DATE,
    LATEST_HARING_EVENT_TABLE.LATEST_HARING_KEY AS LATEST_HARING_KEY,
    DATEDIFF(LATEST_HARING_DATE,FIRST_HARING_DATE) DIFFERENCE,
    ((DATEDIFF(LATEST_HARING_DATE,FIRST_HARING_DATE)) / HARING_COUNT) AS DAYS_BETWEEN_HARINGS
FROM
	((HASHERS
	JOIN (
		SELECT
			HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
			COUNT(HARINGS.HARINGS_HASHER_KY) AS HARING_COUNT
		FROM
			HARINGS
            JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ? AND
            HASHES.IS_HYPER IN (?,?)
		GROUP BY HARINGS.HARINGS_HASHER_KY
        ) HARING_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HARING_COUNT_TEMP_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
			MIN(HASHES.EVENT_DATE) AS FIRST_HARING_DATE,
            MIN(HASHES.HASH_KY) AS FIRST_HARING_KEY
		FROM
			HARINGS
            JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ? AND
            HASHES.IS_HYPER IN (?,?)
		GROUP BY HARINGS.HARINGS_HASHER_KY
        ) FIRST_HARING_EVENT_TABLE ON ((HASHERS.HASHER_KY = FIRST_HARING_EVENT_TABLE.HASHER_KY)))
	JOIN (
		SELECT
			HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
			MAX(HASHES.EVENT_DATE) AS LATEST_HARING_DATE,
            MAX(HASHES.HASH_KY) AS LATEST_HARING_KEY
		FROM
			HARINGS
            JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
		WHERE
			HASHES.KENNEL_KY = ? AND
            HASHES.IS_HYPER IN (?,?)
		GROUP BY HARINGS.HARINGS_HASHER_KY
        ) LATEST_HARING_EVENT_TABLE ON ((HASHERS.HASHER_KY = LATEST_HARING_EVENT_TABLE.HASHER_KY))
WHERE
	(HARING_COUNT_TEMP_TABLE.HARING_COUNT >= ?)
ORDER BY XORDERCOLUMNX XUPORDOWNX");

DEFINE("FASTEST_HASHERS_TO_ANALVERSARIES","SELECT
AnalversaryHashes.HASHER_KY,
AnalversaryHashes.HASHER_NAME,
Initial_Hashes.FIRST_HASH_KEY,
Initial_Hashes.FIRST_HASH_DATE,
ALL_HASHES.HASH_KY AS ANALVERSARY_HASH_KY,
ALL_HASHES.EVENT_DATE AS ANALVERSARY_DATE,
DATEDIFF(ALL_HASHES.EVENT_DATE,FIRST_HASH_DATE) DAYS_TO_REACH_ANALVERSARY
FROM (
	SELECT
		HASHERS.HASHER_KY,
		HASHERS.HASHER_NAME,
		(
			SELECT
				HASHES.HASH_KY
			FROM HASHES JOIN HASHINGS ON HASHES.HASH_KY = HASHINGS.HASH_KY
			WHERE
				HASHINGS.HASHER_KY = OUTEREP.HASHER_KY
				AND HASHES.KENNEL_KY = ?
			ORDER BY HASHES.HASH_KY ASC
			LIMIT XLIMITX,1
		) AS AnalversaryHash
	FROM HASHES
	JOIN HASHINGS OUTEREP ON HASHES.HASH_KY = OUTEREP.HASH_KY
	JOIN HASHERS ON OUTEREP.HASHER_KY = HASHERS.HASHER_KY
	GROUP BY HASHER_KY
	) AnalversaryHashes
JOIN (
	SELECT
		HASHINGS.HASHER_KY AS HASHER_KY,
		MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE,
		MIN(HASHES.HASH_KY) AS FIRST_HASH_KEY
	FROM
		HASHINGS
		JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
	WHERE
		HASHES.KENNEL_KY = ?
	GROUP BY HASHINGS.HASHER_KY
    ) Initial_Hashes ON AnalversaryHashes.HASHER_KY = Initial_Hashes.HASHER_KY
JOIN (SELECT * FROM HASHES) ALL_HASHES ON AnalversaryHashes.AnalversaryHash = ALL_HASHES.HASH_KY
ORDER BY DAYS_TO_REACH_ANALVERSARY XORDERX"
);


DEFINE("FASTEST_HASHERS_TO_ANALVERSARIES2","SELECT	AnalversaryHashes.HASHER_KY,
		AnalversaryHashes.HASHER_NAME,
		Initial_Hashes.FIRST_HASH_KY,
		Initial_Hashes.FIRST_HASH_DATE,
		HASHES.HASH_KY AS ANALVERSARY_HASH_KY,
		HASHES.EVENT_DATE AS ANALVERSARY_DATE,
		DATEDIFF(HASHES.EVENT_DATE,FIRST_HASH_DATE) AS DAYS_TO_REACH_ANALVERSARY
	FROM (SELECT	HASHERS.HASHER_KY,
					HASHERS.HASHER_NAME,
					(	SELECT HASHES.HASH_KY
						FROM HASHES
            			JOIN HASHINGS ON HASHES.HASH_KY = HASHINGS.HASH_KY
						WHERE HASHINGS.HASHER_KY = HASHERS.HASHER_KY
								AND HASHES.KENNEL_KY = ?
						ORDER BY HASHES.EVENT_DATE ASC
						LIMIT XLIMITX,1
					) AS AnalversaryHash
			FROM HASHERS
		) AnalversaryHashes
	JOIN (SELECT	HASHINGS.HASHER_KY AS HASHER_KY,
					MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE,
					MIN(HASHES.HASH_KY) AS FIRST_HASH_KY
			FROM HASHINGS
			JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
			WHERE HASHES.KENNEL_KY = ?
			GROUP BY HASHINGS.HASHER_KY
		) Initial_Hashes ON AnalversaryHashes.HASHER_KY = Initial_Hashes.HASHER_KY
	JOIN HASHES ON AnalversaryHashes.AnalversaryHash = HASHES.HASH_KY
	GROUP BY HASHER_KY
	ORDER BY XORDERCOLUMNX XORDERX"
);

DEFINE("HASH_EVENTS_WITH_COUNTS","SELECT *, DAYNAME(EVENT_DATE) AS EVENT_DAY_NAME FROM HASHES JOIN (
	SELECT HASHES.HASH_KY AS THE_HASH_KEY, COUNT(*) AS THE_COUNT
	FROM HASHINGS JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
	WHERE KENNEL_KY = ?
	GROUP BY HASHES.HASH_KY
) AS THE_TEMPORARY_TABLE ON HASHES.HASH_KY = THE_TEMPORARY_TABLE.THE_HASH_KEY
ORDER BY THE_COUNT XUPORDOWNX
LIMIT XLIMITX");


DEFINE("BACKSLIDERS_FOR_SPECIFIC_HASH_EVENT","SELECT
	HASHERS.HASHER_KY,
	HASHERS.HASHER_NAME,
	LATEST_HASH_TABLE.HASH_KY AS CURRENT_HASH_KY,
  HASHES.EVENT_DATE AS CURRENT_EVENT_DATE,
  LATEST_HASH_TABLE.LATEST_HASH_KEY AS PREVIOUS_HASH_KEY,
  LH.EVENT_DATE AS PREVIOUS_EVENT_DATE,
  LH.KENNEL_EVENT_NUMBER AS PREVIOUS_EVENT_NUMBER,
	(
		SELECT
			COUNT(*)
		FROM
			HASHES
		WHERE
			HASHES.EVENT_DATE > PREVIOUS_EVENT_DATE AND
						HASHES.EVENT_DATE < CURRENT_EVENT_DATE AND
						HASHES.KENNEL_KY = ?
	) AS THE_NUMBER_OF_MISSED_HASHES,
  DATEDIFF(HASHES.EVENT_DATE,LH.EVENT_DATE) AS DAYS_SINCE_LAST_EVENT
FROM
	(
		SELECT
			HASHERS.HASHER_KY,
			HASHES_OUTER.HASH_KY,
			(
				SELECT
					HASHES.HASH_KY
				FROM
					HASHES JOIN HASHINGS ON HASHES.HASH_KY = HASHINGS.HASH_KY
				WHERE
					HASHINGS.HASHER_KY = HASHINGS_OUTER.HASHER_KY AND
					HASHES.EVENT_DATE < HASHES_OUTER.EVENT_DATE AND
					HASHES.KENNEL_KY = HASHES_OUTER.KENNEL_KY
				ORDER BY HASHES.EVENT_DATE DESC
				LIMIT 0,1
			) AS LATEST_HASH_KEY
		FROM
			HASHES HASHES_OUTER
			JOIN HASHINGS HASHINGS_OUTER ON HASHES_OUTER.HASH_KY = HASHINGS_OUTER.HASH_KY
			JOIN HASHERS ON HASHINGS_OUTER.HASHER_KY = HASHERS.HASHER_KY
		WHERE
			HASHES_OUTER.HASH_KY = ?
			AND KENNEL_KY = ?
	) LATEST_HASH_TABLE
    JOIN HASHERS ON LATEST_HASH_TABLE.HASHER_KY = HASHERS.HASHER_KY
    JOIN HASHINGS ON HASHERS.HASHER_KY = HASHINGS.HASHER_KY
    JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
    LEFT JOIN HASHES LH ON LATEST_HASH_TABLE.LATEST_HASH_KEY = LH.HASH_KY
WHERE
	HASHES.HASH_KY = ?
ORDER BY DAYS_SINCE_LAST_EVENT DESC
");
