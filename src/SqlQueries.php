<?php

namespace App;

class SqlQueries {

  public function getHashingCountsThisYear() : string {
    return "
      SELECT HASHERS.HASHER_KY AS THE_KEY, HASHERS.HASHER_NAME AS NAME, COUNT(0) AS VALUE
        FROM HASHERS
        JOIN HASHINGS
          ON HASHERS.HASHER_KY = HASHINGS.HASHER_KY
        JOIN HASHES
          ON HASHINGS.HASH_KY = HASHES.HASH_KY
       WHERE HASHES.KENNEL_KY = ?
         AND YEAR(HASHES.EVENT_DATE) = YEAR(CURDATE())
       GROUP BY HASHERS.HASHER_KY, HASHERS.HASHER_NAME
       ORDER BY VALUE DESC";
  }
  
  public function getHashingCountsLastYear() : string {
    return "
      SELECT HASHERS.HASHER_KY AS THE_KEY, HASHERS.HASHER_NAME AS NAME, COUNT(0) AS VALUE
        FROM HASHERS
        JOIN HASHINGS
          ON HASHERS.HASHER_KY = HASHINGS.HASHER_KY
        JOIN HASHES
          ON HASHINGS.HASH_KY = HASHES.HASH_KY
       WHERE HASHES.KENNEL_KY = ?
         AND YEAR(HASHES.EVENT_DATE) = YEAR(CURDATE())-1
       GROUP BY HASHERS.HASHER_KY, HASHERS.HASHER_NAME
       ORDER BY VALUE DESC";
  }

  public function getHaringCountsThisYear() : string {
    return "
      SELECT HASHERS.HASHER_KY AS THE_KEY, HASHERS.HASHER_NAME AS NAME, COUNT(0) AS VALUE
        FROM HASHERS
        JOIN HARINGS
          ON HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY
        JOIN HARE_TYPES
          ON HARINGS.HARE_TYPE & HARE_TYPES.HARE_TYPE = HARE_TYPES.HARE_TYPE
        JOIN HASHES
          ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
       WHERE HASHES.KENNEL_KY = ?
         AND YEAR(HASHES.EVENT_DATE) = YEAR(CURDATE())
       GROUP BY HASHERS.HASHER_KY, HASHERS.HASHER_NAME
       ORDER BY VALUE DESC";
  }

  public function getHaringCountsLastYear() : string {
    return "
      SELECT HASHERS.HASHER_KY AS THE_KEY, HASHERS.HASHER_NAME AS NAME, COUNT(0) AS VALUE
        FROM HASHERS
        JOIN HARINGS
          ON HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY
        JOIN HARE_TYPES
          ON HARINGS.HARE_TYPE & HARE_TYPES.HARE_TYPE = HARE_TYPES.HARE_TYPE
        JOIN HASHES
          ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
       WHERE HASHES.KENNEL_KY = ?
         AND YEAR(HASHES.EVENT_DATE) = YEAR(CURDATE())-1
       GROUP BY HASHERS.HASHER_KY, HASHERS.HASHER_NAME
       ORDER BY VALUE DESC";
  }

  public function getFastestHashersToAnalversaries2() : string {
    return "
      SELECT ANALVERSARYHASHES.HASHER_KY, ANALVERSARYHASHES.HASHER_NAME,
             (SELECT HASH_KY FROM HASHES WHERE KENNEL_KY=? AND EVENT_DATE=FIRST_HASH_DATE) AS FIRST_HASH_KY,
             INITIAL_HASHES.FIRST_HASH_DATE,
             HASHES.HASH_KY AS ANALVERSARY_HASH_KY,
             HASHES.EVENT_DATE AS ANALVERSARY_DATE,
             DATEDIFF(HASHES.EVENT_DATE,FIRST_HASH_DATE) AS DAYS_TO_REACH_ANALVERSARY
        FROM (SELECT HASHERS.HASHER_KY, HASHERS.HASHER_NAME, (
                     SELECT HASHES.HASH_KY
                       FROM HASHES
                       JOIN HASHINGS
                         ON HASHES.HASH_KY = HASHINGS.HASH_KY
                      WHERE HASHINGS.HASHER_KY = HASHERS.HASHER_KY
                        AND HASHES.KENNEL_KY = ?
                      ORDER BY HASHES.EVENT_DATE ASC LIMIT XLIMITX,1)
                         AS ANALVERSARYHASH
                FROM HASHERS) ANALVERSARYHASHES
        JOIN (SELECT HASHINGS.HASHER_KY AS HASHER_KY,
                     MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE
                FROM HASHINGS
                JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
               WHERE HASHES.KENNEL_KY = ?
               GROUP BY HASHINGS.HASHER_KY) INITIAL_HASHES
          ON ANALVERSARYHASHES.HASHER_KY = INITIAL_HASHES.HASHER_KY
        JOIN HASHES
          ON ANALVERSARYHASHES.ANALVERSARYHASH = HASHES.HASH_KY
       GROUP BY HASHER_KY
       ORDER BY XORDERCOLUMNX XORDERX";
  }

  public function getFastestHaresToAnalversaries2() : string {
    return "
      SELECT ANALVERSARYHASHES.HASHER_KY,
             ANALVERSARYHASHES.HASHER_NAME,
             (SELECT HASH_KY
                FROM HASHES
               WHERE KENNEL_KY=?
                 AND EVENT_DATE=FIRST_HASH_DATE) AS FIRST_HASH_KY,
             INITIAL_HASHES.FIRST_HASH_DATE,
             HASHES.HASH_KY AS ANALVERSARY_HASH_KY,
             HASHES.EVENT_DATE AS ANALVERSARY_DATE,
             DATEDIFF(HASHES.EVENT_DATE,FIRST_HASH_DATE) AS DAYS_TO_REACH_ANALVERSARY
        FROM (SELECT HASHERS.HASHER_KY, HASHERS.HASHER_NAME, (
                     SELECT HASHES.HASH_KY
                       FROM HASHES
                       JOIN HARINGS
                         ON HASHES.HASH_KY = HARINGS.HARINGS_HASH_KY
                      WHERE HARINGS.HARINGS_HASHER_KY = HASHERS.HASHER_KY
                        AND HASHES.KENNEL_KY = ?
                        AND HARINGS.HARE_TYPE & ? != 0
                      ORDER BY HASHES.EVENT_DATE ASC LIMIT XLIMITX,1)
                         AS ANALVERSARYHASH
                FROM HASHERS) ANALVERSARYHASHES
        JOIN (SELECT HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
                     MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE
                FROM HARINGS
                JOIN HASHES
                  ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
               WHERE HASHES.KENNEL_KY = ?
                 AND HARINGS.HARE_TYPE & ? != 0
               GROUP BY HARINGS.HARINGS_HASHER_KY) INITIAL_HASHES
          ON ANALVERSARYHASHES.HASHER_KY = INITIAL_HASHES.HASHER_KY
        JOIN HASHES
          ON ANALVERSARYHASHES.ANALVERSARYHASH = HASHES.HASH_KY
       GROUP BY HASHER_KY
       ORDER BY XORDERCOLUMNX XORDERX";
  }

  public function getTheLongestStreaks() : string {
    return "
      SELECT HASHER_KY AS THE_KEY, (
             SELECT HASHER_NAME 
               FROM HASHERS
              WHERE HASHERS.HASHER_KY = grps.HASHER_KY) AS NAME,
             MAX(grp_count) AS VALUE
        FROM (SELECT HASHER_KY, COUNT(*) grp_count
                FROM (SELECT HASHER_KY, seq-(CAST(row_number() over(order by HASHER_KY, seq) AS SIGNED)) AS grp
                        FROM (SELECT CAST(seq AS SIGNED) AS seq, HASHER_KY, HASHINGS.HASH_KY
                                FROM HASHINGS
                                JOIN (SELECT ROW_NUMBER() OVER () AS seq, HASHES.HASH_KY
                                        FROM HASHES
                                       WHERE KENNEL_KY=?
                                       ORDER BY EVENT_DATE, HASH_KY) AS EVENTS_IN_ORDER
                                  ON HASHINGS.HASH_KY = EVENTS_IN_ORDER.HASH_KY) 
                                  AS INNER_QUERY)
                          AS INNER2
               GROUP BY HASHER_KY, grp)
          AS grps
       GROUP BY HASHER_KY
       ORDER BY VALUE DESC, NAME";
  }

  public function getStreakersList() : string {
    return "
        WITH THIS_EVENT AS (
      SELECT HASH_KY, EVENT_DATE
        FROM HASHES
       WHERE HASH_KY = ?),
             ALL_EVENTS AS (
      SELECT ROW_NUMBER() OVER () AS seq, HASH_KY
        FROM HASHES
       WHERE KENNEL_KY=?
         AND EVENT_DATE <= (SELECT EVENT_DATE FROM THIS_EVENT)
       ORDER BY EVENT_DATE, HASH_KY),
             HASHER_GROUPS AS (
      SELECT HASHER_KY, seq-(CAST(row_number() over(order by HASHER_KY, seq) AS SIGNED)) as grp
        FROM (SELECT CAST(seq AS SIGNED) AS seq, HASHER_KY, HASHINGS.HASH_KY
                FROM HASHINGS
                JOIN ALL_EVENTS
                  ON HASHINGS.HASH_KY = ALL_EVENTS.HASH_KY
               WHERE HASHER_KY IN (
                     SELECT HASHER_KY 
                       FROM HASHINGS 
                      WHERE HASH_KY=(SELECT HASH_KY FROM THIS_EVENT))) AS hg),
             HASHER_MAX_GROUPS AS (
      SELECT HASHER_KY, MAX(grp) AS max_grp
        FROM HASHER_GROUPS
       GROUP BY HASHER_KY),
             HASHER_LAST_GROUPS AS (
      SELECT HASHER_MAX_GROUPS.HASHER_KY, grp
        FROM HASHER_GROUPS
        JOIN HASHER_MAX_GROUPS
          ON HASHER_GROUPS.HASHER_KY = HASHER_MAX_GROUPS.HASHER_KY
         AND HASHER_GROUPS.grp = HASHER_MAX_GROUPS.max_grp)
      SELECT HASHER_KY AS THE_HASHER_KY,
             (SELECT HASHER_NAME FROM HASHERS WHERE HASHERS.HASHER_KY = grps.HASHER_KY) AS THE_HASHER_NAME,
             grp_count AS THE_STREAK_IN_EVENTS,
             (SELECT COALESCE((
                     SELECT DATE_FORMAT(EVENT_DATE, '%Y/%m/%d') 
                       FROM HASHES WHERE HASH_KY=(
                            SELECT HASH_KY 
                              FROM ALL_EVENTS 
                             WHERE seq=(
                                   SELECT seq 
                                     FROM ALL_EVENTS
                                     JOIN THIS_EVENT
                                       ON THIS_EVENT.HASH_KY = ALL_EVENTS.HASH_KY) - grp_count)), 'NA')) AS LAST_MISSED_EVENT,
             1+DATEDIFF(
                   (SELECT EVENT_DATE FROM THIS_EVENT),
                   (SELECT EVENT_DATE
                      FROM HASHES
                     WHERE HASH_KY=(
                           SELECT HASH_KY 
                             FROM ALL_EVENTS 
                            WHERE seq=(SELECT seq 
                                         FROM ALL_EVENTS 
                                         JOIN THIS_EVENT 
                                           ON THIS_EVENT.HASH_KY = ALL_EVENTS.HASH_KY) - grp_count + 1))) AS THE_STREAK_IN_DAYS
        FROM (SELECT HASHER_KY, COUNT(*) AS grp_count
                FROM HASHER_LAST_GROUPS
               GROUP BY HASHER_KY, grp) 
          AS grps
       ORDER BY THE_STREAK_IN_EVENTS DESC, THE_HASHER_NAME";
  }

  public function getHoundCountByHashKey() : string {
    return "
      SELECT COUNT(*) AS THE_COUNT
        FROM HASHERS
        JOIN HASHINGS
          ON HASHERS.HASHER_KY = HASHINGS.HASHER_KY
       WHERE HASHINGS.HASH_KY = ?";
  }

  public function getHareCountByHashKey() : string {
    return "
      SELECT COUNT(*) AS THE_COUNT
        FROM HASHERS
        JOIN HARINGS
          ON HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY
       WHERE HARINGS.HARINGS_HASH_KY = ?";
  }

  public function getBackslidersForSpecificHashEvent() : string {
    return "
      SELECT HASHERS.HASHER_KY, HASHERS.HASHER_NAME, LATEST_HASH_TABLE.HASH_KY AS CURRENT_HASH_KY, HASHES.EVENT_DATE AS CURRENT_EVENT_DATE,
             LATEST_HASH_TABLE.LATEST_HASH_KEY AS PREVIOUS_HASH_KEY, LH.EVENT_DATE AS PREVIOUS_EVENT_DATE,
             LH.KENNEL_EVENT_NUMBER AS PREVIOUS_EVENT_NUMBER, (
                 SELECT COUNT(*)
                   FROM HASHES
                  WHERE HASHES.EVENT_DATE > PREVIOUS_EVENT_DATE
                    AND HASHES.EVENT_DATE < CURRENT_EVENT_DATE
                    AND HASHES.KENNEL_KY = ?) AS THE_NUMBER_OF_MISSED_HASHES,
             DATEDIFF(HASHES.EVENT_DATE,LH.EVENT_DATE) AS DAYS_SINCE_LAST_EVENT
        FROM (SELECT HASHERS.HASHER_KY, HASHES_OUTER.HASH_KY, (
                     SELECT HASHES.HASH_KY
                       FROM HASHES
                       JOIN HASHINGS
                         ON HASHES.HASH_KY = HASHINGS.HASH_KY
                      WHERE HASHINGS.HASHER_KY = HASHINGS_OUTER.HASHER_KY
                        AND HASHES.EVENT_DATE < HASHES_OUTER.EVENT_DATE
                        AND HASHES.KENNEL_KY = HASHES_OUTER.KENNEL_KY
                      ORDER BY HASHES.EVENT_DATE DESC
                      LIMIT 0,1) AS LATEST_HASH_KEY
                FROM HASHES HASHES_OUTER
                JOIN HASHINGS HASHINGS_OUTER
                  ON HASHES_OUTER.HASH_KY = HASHINGS_OUTER.HASH_KY
                JOIN HASHERS
                  ON HASHINGS_OUTER.HASHER_KY = HASHERS.HASHER_KY
               WHERE HASHES_OUTER.HASH_KY = ?
                 AND KENNEL_KY = ?) LATEST_HASH_TABLE
        JOIN HASHERS
          ON LATEST_HASH_TABLE.HASHER_KY = HASHERS.HASHER_KY
        JOIN HASHINGS
          ON HASHERS.HASHER_KY = HASHINGS.HASHER_KY
        JOIN HASHES
          ON HASHINGS.HASH_KY = HASHES.HASH_KY
   LEFT JOIN HASHES LH
          ON LATEST_HASH_TABLE.LATEST_HASH_KEY = LH.HASH_KY
       WHERE HASHES.HASH_KY = ?
       ORDER BY DAYS_SINCE_LAST_EVENT DESC";
  }

  public function getOverallHareAnalversariesForEvent() : string {
    return "
      SELECT HASHERS.HASHER_NAME AS HASHER_NAME,
             COUNT(*) AS THE_COUNT,
             MAX(HASHES.EVENT_DATE) AS MAX_EVENT_DATE
       FROM HASHERS
       JOIN HARINGS
         ON HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY
       JOIN HARE_TYPES
         ON HARINGS.HARE_TYPE & HARE_TYPES.HARE_TYPE = HARE_TYPES.HARE_TYPE
       JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
      WHERE HASHES.EVENT_DATE <= (SELECT EVENT_DATE FROM HASHES WHERE HASH_KY = ?)
        AND HASHES.KENNEL_KY = ?
      GROUP BY HASHERS.HASHER_NAME
     HAVING ((((THE_COUNT % 5) = 0) OR ((THE_COUNT % 69) = 0) OR ((THE_COUNT % 666) = 0) OR (((THE_COUNT - 69) % 100) = 0)))
        AND MAX_EVENT_DATE = (SELECT EVENT_DATE FROM HASHES WHERE HASH_KY = ?)
      ORDER BY THE_COUNT DESC";
  }

  public function getConsolidatedHareAnalversariesForEvent() : string {
    return "
      SELECT *
        FROM (SELECT HASHERS.HASHER_NAME AS HASHER_NAME,
                     COUNT(*) AS THE_COUNT,
                     MAX(HASHES.EVENT_DATE) AS MAX_EVENT_DATE,
                     HARE_TYPES.HARE_TYPE_NAME AS HARING_TYPE
                FROM HASHERS
                JOIN HARINGS
                  ON HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY
                JOIN HARE_TYPES
                  ON HARINGS.HARE_TYPE & HARE_TYPES.HARE_TYPE = HARE_TYPES.HARE_TYPE
                JOIN HASHES
                  ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
               WHERE HASHES.EVENT_DATE <= (SELECT EVENT_DATE FROM HASHES WHERE HASH_KY = ?)
                 AND HASHES.KENNEL_KY = ?
               GROUP BY HASHERS.HASHER_NAME, HARE_TYPES.HARE_TYPE_NAME
              HAVING ((((THE_COUNT % 5) = 0) OR ((THE_COUNT % 69) = 0) OR ((THE_COUNT % 666) = 0) OR (((THE_COUNT - 69) % 100) = 0)))
                 AND MAX_EVENT_DATE = (SELECT EVENT_DATE FROM HASHES WHERE HASH_KY = ?)
               UNION
              SELECT HASHERS.HASHER_NAME AS HASHER_NAME,
                     COUNT(*) AS THE_COUNT,
                     MAX(HASHES.EVENT_DATE) AS MAX_EVENT_DATE,
                     'Overall' AS HARING_TYPE
                FROM HASHERS
                JOIN HARINGS
                  ON HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY
                JOIN HARE_TYPES
                  ON HARINGS.HARE_TYPE & HARE_TYPES.HARE_TYPE = HARE_TYPES.HARE_TYPE
                JOIN HASHES
                  ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
               WHERE HASHES.EVENT_DATE <= (SELECT EVENT_DATE FROM HASHES WHERE HASH_KY = ?)
                 AND HASHES.KENNEL_KY = ?
               GROUP BY HASHERS.HASHER_NAME
              HAVING ((((THE_COUNT % 5) = 0) OR ((THE_COUNT % 69) = 0) OR ((THE_COUNT % 666) = 0) OR (((THE_COUNT - 69) % 100) = 0)))
                 AND MAX_EVENT_DATE = (SELECT EVENT_DATE FROM HASHES WHERE HASH_KY = ?)) DERIVED_TABLE
       ORDER BY THE_COUNT DESC";
  }

  public function getPersonsHaringCount() : string {
    return "
      SELECT COUNT(*) AS THE_COUNT
        FROM HARINGS
        JOIN HASHES
          ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
        JOIN HARE_TYPES
          ON HARINGS.HARE_TYPE & HARE_TYPES.HARE_TYPE = HARE_TYPES.HARE_TYPE
       WHERE HARINGS_HASHER_KY = ? AND HASHES.KENNEL_KY = ?";
  }
  
  public function getHasherHashCountsByMonthName() : string {
    return "
      SELECT THE_VALUE, THE_COUNT ,
             CASE THE_VALUE
                WHEN '1' THEN 'January'
                WHEN '2' THEN 'February'
                WHEN '3' THEN 'March'
                WHEN '4' THEN 'April'
                WHEN '5' THEN 'May'
                WHEN '6' THEN 'June'
                WHEN '7' THEN 'July'
                WHEN '8' THEN 'August'
                WHEN '9' THEN 'September'
                WHEN '10' THEN 'October'
                WHEN '11' THEN 'November'
                WHEN '12' THEN 'December'
              END AS MONTH_NAME
        FROM (
              SELECT MONTH(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
                FROM HASHINGS
                JOIN HASHES
                  ON HASHINGS.HASH_KY = HASHES.HASH_KY
               WHERE HASHINGS.HASHER_KY = ?
                 AND HASHES.KENNEL_KY = ?
               GROUP BY MONTH(EVENT_DATE)
               ORDER BY MONTH(EVENT_DATE)) TEMP_TABLE";
  }

  public function getHasherHashCountsByQuarter() : string {
    return "
      SELECT QUARTER(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM HASHINGS
        JOIN HASHES
          ON HASHINGS.HASH_KY = HASHES.HASH_KY
       WHERE HASHINGS.HASHER_KY = ?
         AND HASHES.KENNEL_KY = ?
       GROUP BY QUARTER(EVENT_DATE)
       ORDER BY QUARTER(EVENT_DATE)";
  }

  public function getHasherHashCountsByState() : string {
    return "
      SELECT HASHES.EVENT_STATE AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM HASHINGS
        JOIN HASHES
          ON HASHINGS.HASH_KY = HASHES.HASH_KY
       WHERE HASHINGS.HASHER_KY = ?
         AND HASHES.KENNEL_KY = ?
       GROUP BY HASHES.EVENT_STATE
       ORDER BY THE_COUNT DESC";
  }

  public function getHasherHashCountsByCounty() : string {
    return "
      SELECT HASHES.COUNTY AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM HASHINGS
        JOIN HASHES
          ON HASHINGS.HASH_KY = HASHES.HASH_KY
       WHERE HASHINGS.HASHER_KY = ?
         AND HASHES.KENNEL_KY = ?
       GROUP BY HASHES.COUNTY
       ORDER BY THE_COUNT DESC";
  }

  public function getHasherHashCountsByPostalCode() : string {
    return "
      SELECT HASHES.POSTAL_CODE AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM HASHINGS
        JOIN HASHES
          ON HASHINGS.HASH_KY = HASHES.HASH_KY
       WHERE HASHINGS.HASHER_KY = ?
         AND HASHES.KENNEL_KY = ?
       GROUP BY HASHES.POSTAL_CODE
       ORDER BY THE_COUNT DESC";
  }
  
  public function getHasherHashCountsByDayname() : string {
    return "
      SELECT DAYNAME(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM HASHINGS
        JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
       WHERE HASHINGS.HASHER_KY = ?
         AND HASHES.KENNEL_KY = ?
       GROUP BY DAYNAME(EVENT_DATE)
       ORDER BY DAYNAME(EVENT_DATE)";
  }
  
  public function getHasherHashCountsByCity() : string {
    return "
      SELECT HASHES.EVENT_CITY AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM HASHINGS
        JOIN HASHES
          ON HASHINGS.HASH_KY = HASHES.HASH_KY
       WHERE HASHINGS.HASHER_KY = ?
         AND HASHES.KENNEL_KY = ?
       GROUP BY HASHES.EVENT_CITY
       ORDER BY THE_COUNT DESC";
  }

  public function getTheLongestStreaksForhasher() : string {
    return "
      WITH ALL_EVENTS AS (
           SELECT ROW_NUMBER() OVER () AS seq, HASH_KY
             FROM HASHES
            WHERE KENNEL_KY=?
            ORDER BY EVENT_DATE, HASH_KY)
    SELECT MAX(grp_count) AS MAX_STREAK
      FROM (SELECT COUNT(*) grp_count
              FROM (SELECT seq-(row_number() over(order by seq)) as grp
                      FROM ALL_EVENTS
                      JOIN HASHINGS
                        ON ALL_EVENTS.HASH_KY = HASHINGS.HASH_KY
                     WHERE HASHINGS.HASHER_KY = ?)
                AS INNER_QUERY
             GROUP BY grp)
        AS OUTER_QUERY";
  }
  
  public function getPersonsHaringTypeCount() : string {
    return "
      SELECT COUNT(*) AS THE_COUNT
        FROM HARINGS
        JOIN HASHES
          ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
       WHERE HARINGS_HASHER_KY = ?
         AND HASHES.KENNEL_KY = ?
         AND HARINGS.HARE_TYPE & ? != 0";
  }
  
  public function getSelectHashersVirginHash() : string {
    return "
      SELECT HASHES.HASH_KY, KENNEL_KY, KENNEL_EVENT_NUMBER, EVENT_DATE, EVENT_LOCATION,
             EVENT_CITY, EVENT_STATE, SPECIAL_EVENT_DESCRIPTION,
             DATE_FORMAT(EVENT_DATE,\"%m/%d/%Y\") AS EVENT_DATE_FORMATTED,
             TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) AS YEARS_SINCE_EVENT,
             TIMESTAMPDIFF(MONTH, DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), DATE(SYSDATE())) AS MONTHS_SINCE_EVENT,
             TIMESTAMPDIFF(DAY, DATE_ADD(DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), INTERVAL TIMESTAMPDIFF(MONTH, DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), DATE(SYSDATE())) MONTH), DATE(SYSDATE())) AS DAYS_SINCE_EVENT
        FROM HASHES
        JOIN HASHINGS
          ON HASHES.HASH_KY = HASHINGS.HASH_KY
       WHERE HASHINGS.HASHER_KY = ?
         AND HASHES.KENNEL_KY = ?
       ORDER BY HASHES.EVENT_DATE ASC
       LIMIT 1";
  }

  public function getSelectHashersMostRecentHash() : string {
    return 
      "SELECT HASHES.HASH_KY, KENNEL_KY, KENNEL_EVENT_NUMBER, EVENT_DATE, EVENT_LOCATION,
              EVENT_CITY, EVENT_STATE, SPECIAL_EVENT_DESCRIPTION,
              DATE_FORMAT(EVENT_DATE,\"%m/%d/%Y\") AS EVENT_DATE_FORMATTED,
              TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) AS YEARS_SINCE_EVENT,
              TIMESTAMPDIFF(MONTH, DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), DATE(SYSDATE())) AS MONTHS_SINCE_EVENT,
              TIMESTAMPDIFF(DAY, DATE_ADD(DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), INTERVAL TIMESTAMPDIFF(MONTH, DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), DATE(SYSDATE())) MONTH), DATE(SYSDATE())) AS DAYS_SINCE_EVENT
         FROM HASHES
         JOIN HASHINGS
           ON HASHES.HASH_KY = HASHINGS.HASH_KY
        WHERE HASHINGS.HASHER_KY = ?
          AND HASHES.KENNEL_KY = ?
        ORDER BY HASHES.EVENT_DATE DESC
        LIMIT 1";
  }
  
  public function getHasherAllHaringCountsByCity() : string {
    return "
      SELECT HASHES.EVENT_CITY AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM HARINGS
        JOIN HASHES
          ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
        JOIN HARE_TYPES
          ON HARINGS.HARE_TYPE & HARE_TYPES.HARE_TYPE = HARE_TYPES.HARE_TYPE
       WHERE HARINGS.HARINGS_HASHER_KY = ?
         AND HASHES.KENNEL_KY = ?
       GROUP BY HASHES.EVENT_CITY
       ORDER BY THE_COUNT DESC";
  }
  
  public function getOverallCohareCountByHare() : string {
    return "
      SELECT TEMPTABLE.HASHER_NAME AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM HARINGS
        JOIN HASHERS
          ON HARINGS.HARINGS_HASHER_KY = HASHERS.HASHER_KY
        JOIN HASHES
          ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
        JOIN (SELECT HARINGS_HASH_KY, HASHER_NAME, HARINGS_HASHER_KY
                FROM HARINGS
                JOIN HASHERS
                  ON HARINGS.HARINGS_HASHER_KY = HASHERS.HASHER_KY
                JOIN HASHES
                  ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
               WHERE HASHES.KENNEL_KY = ?) TEMPTABLE
          ON HARINGS.HARINGS_HASH_KY = TEMPTABLE.HARINGS_HASH_KY
       WHERE HARINGS.HARINGS_HASHER_KY = ?
         AND TEMPTABLE.HARINGS_HASHER_KY <> ?
       GROUP BY TEMPTABLE.HASHER_NAME
       ORDER BY THE_COUNT DESC";
  }
  
  public function getHasherHaringCountsByCity() : string {
    return "
      SELECT HASHES.EVENT_CITY AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM HARINGS
        JOIN HASHES
          ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
       WHERE HARINGS.HARINGS_HASHER_KY = ?
         AND HASHES.KENNEL_KY = ?
         AND HARINGS.HARE_TYPE & ? != 0
       GROUP BY HASHES.EVENT_CITY
       ORDER BY THE_COUNT DESC";
  }
  
  public function getCohareCountByHare() : string {
    return "
      SELECT TEMPTABLE.HASHER_NAME AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM HARINGS
         JOIN HASHERS
           ON HARINGS.HARINGS_HASHER_KY = HASHERS.HASHER_KY
         JOIN HASHES
           ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
         JOIN (SELECT HARINGS_HASH_KY, HASHER_NAME, HARINGS_HASHER_KY
                 FROM HARINGS
                 JOIN HASHERS
                   ON HARINGS.HARINGS_HASHER_KY = HASHERS.HASHER_KY
                 JOIN HASHES
                   ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
                WHERE HASHES.KENNEL_KY = ?) TEMPTABLE
           ON HARINGS.HARINGS_HASH_KY = TEMPTABLE.HARINGS_HASH_KY
        WHERE HARINGS.HARINGS_HASHER_KY = ?
          AND TEMPTABLE.HARINGS_HASHER_KY <> ?
          AND HARINGS.HARE_TYPE & ? != 0
        GROUP BY TEMPTABLE.HASHER_NAME
        ORDER BY THE_COUNT DESC";
  }
  
  public function getSelectHashersVirginHare() : string {
    return "
      SELECT HASHES.HASH_KY, KENNEL_KY, KENNEL_EVENT_NUMBER, EVENT_DATE, EVENT_LOCATION, EVENT_CITY,
             EVENT_STATE, SPECIAL_EVENT_DESCRIPTION,
             DATE_FORMAT(EVENT_DATE,\"%m/%d/%Y\") AS EVENT_DATE_FORMATTED,
             TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) AS YEARS_SINCE_EVENT,
             TIMESTAMPDIFF(MONTH, DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), DATE(SYSDATE())) AS MONTHS_SINCE_EVENT,
             TIMESTAMPDIFF(DAY, DATE_ADD(DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), INTERVAL TIMESTAMPDIFF(MONTH, DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), DATE(SYSDATE())) MONTH), DATE(SYSDATE())) AS DAYS_SINCE_EVENT
        FROM HASHES
        JOIN HARINGS
          ON HASHES.HASH_KY = HARINGS.HARINGS_HASH_KY
       WHERE HARINGS.HARINGS_HASHER_KY = ?
         AND HASHES.KENNEL_KY = ?
         AND (? = 0 OR HARINGS.HARE_TYPE & ? != 0)
       ORDER BY HASHES.EVENT_DATE ASC
       LIMIT 1";
  }

  public function getSelectHashersMostRecentHare() : string {
    return "
      SELECT HASHES.HASH_KY, KENNEL_KY, KENNEL_EVENT_NUMBER, EVENT_DATE, EVENT_LOCATION, EVENT_CITY, EVENT_STATE,
             SPECIAL_EVENT_DESCRIPTION, DATE_FORMAT(EVENT_DATE,\"%m/%d/%Y\") AS EVENT_DATE_FORMATTED,
             TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) AS YEARS_SINCE_EVENT,
             TIMESTAMPDIFF(MONTH, DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), DATE(SYSDATE())) AS MONTHS_SINCE_EVENT,
             TIMESTAMPDIFF(DAY, DATE_ADD(DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), INTERVAL TIMESTAMPDIFF(MONTH, DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), DATE(SYSDATE())) MONTH), DATE(SYSDATE())) AS DAYS_SINCE_EVENT
        FROM HASHES
        JOIN HARINGS
          ON HASHES.HASH_KY = HARINGS.HARINGS_HASH_KY
       WHERE HARINGS.HARINGS_HASHER_KY = ?
         AND HASHES.KENNEL_KY = ?
         AND (? = 0 OR HARINGS.HARE_TYPE & ? != 0)
       ORDER BY HASHES.EVENT_DATE DESC
       LIMIT 1";
  }

  public function getHasherAllHaringCountsByQuarter() : string {
    return "
      SELECT QUARTER(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM HARINGS
        JOIN HASHES
          ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
        JOIN HARE_TYPES
          ON HARINGS.HARE_TYPE & HARE_TYPES.HARE_TYPE = HARE_TYPES.HARE_TYPE
       WHERE HARINGS.HARINGS_HASHER_KY = ?
         AND HASHES.KENNEL_KY = ?
       GROUP BY QUARTER(EVENT_DATE)
       ORDER BY QUARTER(EVENT_DATE)";
  }
  
  public function getHasherHaringCountsByQuarter() : string {
    return "
      SELECT QUARTER(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM HARINGS
        JOIN HASHES
          ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
       WHERE HARINGS.HARINGS_HASHER_KY = ?
         AND HASHES.KENNEL_KY = ?
         AND HARINGS.HARE_TYPE & ? != 0
       GROUP BY QUARTER(EVENT_DATE)
       ORDER BY QUARTER(EVENT_DATE)";
  }

  public function getHasherHaringCountsByMonth() : string {
    return "
      SELECT MONTH(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM HARINGS
        JOIN HASHES
          ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
       WHERE HARINGS.HARINGS_HASHER_KY = ?
         AND HASHES.KENNEL_KY = ?
         AND HARINGS.HARE_TYPE & ? != 0
       GROUP BY MONTH(EVENT_DATE)
       ORDER BY MONTH(EVENT_DATE)";
  }
  
  public function getHasherHaringCountsByState() : string {
    return "
      SELECT HASHES.EVENT_STATE AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM HARINGS
        JOIN HASHES
          ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
       WHERE HARINGS.HARINGS_HASHER_KY = ?
         AND HASHES.KENNEL_KY = ?
         AND HARINGS.HARE_TYPE & ? != 0
       GROUP BY HASHES.EVENT_STATE
       ORDER BY THE_COUNT DESC";
  }
  
  public function getHasherAttendanceRecordList() : string {
    return "
      SELECT CASE WHEN TENDERS.HASH_KY IS NULL THEN 'NO' ELSE 'YES' END AS ATTENDED, HASHES.*, HASH_TYPE_NAME
        FROM (SELECT HASHINGS.HASH_KY, HASHES.EVENT_DATE, HASH_TYPES.HASH_TYPE_NAME
                FROM HASHINGS
                JOIN HASHES
                  ON HASHINGS.HASH_KY = HASHES.HASH_KY
                JOIN HASH_TYPES
                  ON HASHES.HASH_TYPE = HASH_TYPES.HASH_TYPE
               WHERE HASHES.KENNEL_KY = ? AND HASHINGS.HASHER_KY = ?) AS TENDERS
       RIGHT JOIN HASHES
          ON TENDERS.HASH_KY = HASHES.HASH_KY
       WHERE HASHES.KENNEL_KY = ?
       ORDER BY EVENT_DATE DESC";
  }

  public function getLowestHashAttendanceByHare() : string {
    return "
      SELECT HASHERS.HASHER_KY AS THE_KEY, HASHERS.HASHER_NAME AS NAME, MIN(TEMPTABLE.THE_COUNT) AS VALUE
        FROM HASHERS
        JOIN HARINGS
          ON HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY
        JOIN HASHES
          ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
        JOIN (SELECT HASHINGS.HASH_KY AS THE_HASH_KEY, COUNT(0) AS THE_COUNT
                FROM HASHES
                JOIN HASHINGS
                  ON HASHES.HASH_KY = HASHINGS.HASH_KY
               WHERE HASHES.KENNEL_KY = ?
               GROUP BY HASHINGS.HASH_KY) TEMPTABLE
          ON HASHES.HASH_KY = TEMPTABLE.THE_HASH_KEY
       GROUP BY HASHERS.HASHER_KY, HASHERS.HASHER_NAME
       ORDER BY VALUE";
  }

  public function getHighestHashAttendanceByHare() : string {
    return "
      SELECT HASHERS.HASHER_KY AS THE_KEY, HASHERS.HASHER_NAME AS NAME, MAX(TEMPTABLE.THE_COUNT) AS VALUE
        FROM HASHERS
        JOIN HARINGS
          ON HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY
        JOIN HASHES
          ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
        JOIN (SELECT HASHINGS.HASH_KY AS THE_HASH_KEY,COUNT(0) AS THE_COUNT
                FROM HASHES
                JOIN HASHINGS
                  ON HASHES.HASH_KY = HASHINGS.HASH_KY
               WHERE HASHES.KENNEL_KY = ?
               GROUP BY HASHINGS.HASH_KY) TEMPTABLE
          ON HASHES.HASH_KY = TEMPTABLE.THE_HASH_KEY
       GROUP BY HASHERS.HASHER_KY,HASHERS.HASHER_NAME
       ORDER BY VALUE DESC";
  }

  public function getAverageHashAttendanceByHare() : string {
    return "
      SELECT HASHERS.HASHER_KY AS THE_KEY, HASHERS.HASHER_NAME AS NAME, AVG(TEMPTABLE.THE_COUNT) AS VALUE
        FROM HASHERS
        JOIN HARINGS
          ON HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY
        JOIN HASHES
          ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
        JOIN (SELECT HASHINGS.HASH_KY AS THE_HASH_KEY,COUNT(0) AS THE_COUNT
                FROM HASHES
                JOIN HASHINGS
                  ON HASHES.HASH_KY = HASHINGS.HASH_KY
               WHERE HASHES.KENNEL_KY = ?
               GROUP BY HASHINGS.HASH_KY) TEMPTABLE
          ON HASHES.HASH_KY = TEMPTABLE.THE_HASH_KEY
       GROUP BY HASHERS.HASHER_KY, HASHERS.HASHER_NAME
       ORDER BY VALUE DESC";
  }

  public function getKennelNumOfDistinctHashers() : string {
    return "
      SELECT COUNT(DISTINCT(HASHINGS.HASHER_KY)) AS THE_COUNT
        FROM HASHES
        JOIN HASHINGS
          ON HASHES.HASH_KY = HASHINGS.HASH_KY
       WHERE HASHES.KENNEL_KY = ?";
  }

  public function getKennelNumOfDistinctHares() : string {
    return "
      SELECT COUNT(DISTINCT(HARINGS.HARINGS_HASHER_KY)) AS THE_COUNT
        FROM HASHES
        JOIN HARINGS
          ON HASHES.HASH_KY = HARINGS.HARINGS_HASH_KY
       WHERE HASHES.KENNEL_KY = ?
         AND HARINGS.HARE_TYPE & ? != 0";
  }

  public function getKennelNumOfDistinctOverallHares() : string {
    return "
      SELECT COUNT(DISTINCT(HARINGS.HARINGS_HASHER_KY)) AS THE_COUNT
        FROM HASHES
        JOIN HARINGS
          ON HASHES.HASH_KY = HARINGS.HARINGS_HASH_KY
       WHERE HASHES.KENNEL_KY = ?";
  }

  public function getKennelHashCountsByMonthName() : string {
    return "
      SELECT THE_VALUE, THE_COUNT ,
             CASE THE_VALUE
                  WHEN '1' THEN 'January'
                  WHEN '2' THEN 'February'
                  WHEN '3' THEN 'March'
                  WHEN '4' THEN 'April'
                  WHEN '5' THEN 'May'
                  WHEN '6' THEN 'June'
                  WHEN '7' THEN 'July'
                  WHEN '8' THEN 'August'
                  WHEN '9' THEN 'September'
                  WHEN '10' THEN 'October'
                  WHEN '11' THEN 'November'
                  WHEN '12' THEN 'December'
              END AS MONTH_NAME
        FROM (SELECT MONTH(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
                FROM HASHES
               WHERE HASHES.KENNEL_KY = ?
               GROUP BY MONTH(EVENT_DATE)
               ORDER BY MONTH(EVENT_DATE)) TEMP_TABLE";
  }

  public function getKennelHashCountsByQuarter() : string {
    return "
      SELECT QUARTER(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM HASHES
       WHERE HASHES.KENNEL_KY = ?
       GROUP BY QUARTER(EVENT_DATE)
       ORDER BY QUARTER(EVENT_DATE)";
  }

  public function getKennelHashCountsByDayname() : string {
    return "
      SELECT DAYNAME(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM HASHES
       WHERE HASHES.KENNEL_KY = ?
       GROUP BY DAYNAME(EVENT_DATE)
       ORDER BY DAYNAME(EVENT_DATE)";
   }

  public function getKennelHashCountsByState() : string {
    return "
      SELECT HASHES.EVENT_STATE AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM HASHES
       WHERE HASHES.KENNEL_KY = ?
       GROUP BY HASHES.EVENT_STATE
       ORDER BY THE_COUNT DESC";
  }

  public function getKennelHashCountsByCounty() : string {
    return "
      SELECT HASHES.COUNTY AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM HASHES
       WHERE HASHES.KENNEL_KY = ?
       GROUP BY HASHES.COUNTY
       ORDER BY THE_COUNT DESC";
  }

  public function getKennelHashCountsByPostalCode() : string {
    return "
      SELECT HASHES.POSTAL_CODE AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM HASHES
       WHERE HASHES.KENNEL_KY = ?
       GROUP BY HASHES.POSTAL_CODE
       ORDER BY THE_COUNT DESC";
  }

  public function getKennelHashCountsByCity() : string {
    return "
      SELECT HASHES.EVENT_CITY AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM HASHES
       WHERE HASHES.KENNEL_KY = ?
       GROUP BY HASHES.EVENT_CITY
       ORDER BY THE_COUNT DESC";
  }
  public function getSelectKennelsVirginHash() : string {
    return "
      SELECT HASHES.HASH_KY, KENNEL_KY, KENNEL_EVENT_NUMBER, EVENT_DATE, EVENT_LOCATION, EVENT_CITY, EVENT_STATE,
             SPECIAL_EVENT_DESCRIPTION, DATE_FORMAT(EVENT_DATE,\"%m/%d/%Y\") AS EVENT_DATE_FORMATTED,
             TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) AS YEARS_SINCE_EVENT,
             TIMESTAMPDIFF(MONTH, DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), DATE(SYSDATE())) AS MONTHS_SINCE_EVENT,
             TIMESTAMPDIFF(DAY, DATE_ADD(DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), INTERVAL TIMESTAMPDIFF(MONTH, DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), DATE(SYSDATE())) MONTH), DATE(SYSDATE())) AS DAYS_SINCE_EVENT
        FROM HASHES
        JOIN HASHINGS
          ON HASHES.HASH_KY = HASHINGS.HASH_KY
       WHERE HASHES.KENNEL_KY = ?
       ORDER BY HASHES.EVENT_DATE ASC
       LIMIT 1";
  }
  
  public function getSelectKennelsMostRecentHash() : string {
    return "
      SELECT HASHES.HASH_KY, KENNEL_KY, KENNEL_EVENT_NUMBER, EVENT_DATE, EVENT_LOCATION, EVENT_CITY, EVENT_STATE,
             SPECIAL_EVENT_DESCRIPTION, DATE_FORMAT(EVENT_DATE,\"%m/%d/%Y\") AS EVENT_DATE_FORMATTED,
             TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) AS YEARS_SINCE_EVENT,
             TIMESTAMPDIFF(MONTH, DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), DATE(SYSDATE())) AS MONTHS_SINCE_EVENT,
             TIMESTAMPDIFF(DAY, DATE_ADD(DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), INTERVAL TIMESTAMPDIFF(MONTH, DATE_ADD(DATE(EVENT_DATE), INTERVAL TIMESTAMPDIFF(YEAR, DATE(EVENT_DATE), DATE(SYSDATE())) YEAR), DATE(SYSDATE())) MONTH), DATE(SYSDATE())) AS DAYS_SINCE_EVENT
        FROM HASHES
        JOIN HASHINGS
          ON HASHES.HASH_KY = HASHINGS.HASH_KY
       WHERE HASHES.KENNEL_KY = ?
       ORDER BY HASHES.EVENT_DATE DESC
       LIMIT 1";
  }
  
  public function getLongestHashingCareerInDays() : string {
    return "
      SELECT HASHERS.HASHER_NAME AS HASHER_NAME, HASHERS.HASHER_KY AS HASHER_KY,
             HASH_COUNT_TEMP_TABLE.HASH_COUNT AS HASH_COUNT, FIRST_HASH_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HASH_DATE,
             (SELECT HASH_KY FROM HASHES WHERE KENNEL_KY=? AND EVENT_DATE=FIRST_HASH_DATE) AS FIRST_HASH_KEY,
             LATEST_HASH_EVENT_TABLE.LATEST_HASH_DATE AS LATEST_HASH_DATE,
             (SELECT HASH_KY FROM HASHES WHERE KENNEL_KY=? AND EVENT_DATE=LATEST_HASH_DATE) AS LATEST_HASH_KEY,
             DATEDIFF(LATEST_HASH_DATE,FIRST_HASH_DATE) DIFFERENCE,
             ((DATEDIFF(LATEST_HASH_DATE,FIRST_HASH_DATE)) / (HASH_COUNT-1)) AS DAYS_BETWEEN_HASHES
        FROM HASHERS
        JOIN (SELECT HASHINGS.HASHER_KY AS HASHER_KY, COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
                FROM HASHINGS
                JOIN HASHES
                  ON HASHINGS.HASH_KY = HASHES.HASH_KY
               WHERE HASHES.KENNEL_KY = ?
               GROUP BY HASHINGS.HASHER_KY) HASH_COUNT_TEMP_TABLE
          ON HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY
        JOIN (SELECT HASHINGS.HASHER_KY AS HASHER_KY, MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE
                FROM HASHINGS
                JOIN HASHES 
                  ON HASHINGS.HASH_KY = HASHES.HASH_KY
               WHERE HASHES.KENNEL_KY = ?
               GROUP BY HASHINGS.HASHER_KY) FIRST_HASH_EVENT_TABLE
          ON HASHERS.HASHER_KY = FIRST_HASH_EVENT_TABLE.HASHER_KY
        JOIN (SELECT HASHINGS.HASHER_KY AS HASHER_KY, MAX(HASHES.EVENT_DATE) AS LATEST_HASH_DATE
                FROM HASHINGS
                JOIN HASHES
                  ON HASHINGS.HASH_KY = HASHES.HASH_KY
               WHERE HASHES.KENNEL_KY = ?
               GROUP BY HASHINGS.HASHER_KY) LATEST_HASH_EVENT_TABLE
          ON HASHERS.HASHER_KY = LATEST_HASH_EVENT_TABLE.HASHER_KY
       WHERE HASH_COUNT_TEMP_TABLE.HASH_COUNT >= ?
         AND HASH_COUNT_TEMP_TABLE.HASH_COUNT > 1
       ORDER BY XORDERCOLUMNX XUPORDOWNX";
   }

  public function getNewcomersByYear() : string {
    return "
      SELECT DATE_FORMAT(FIRST_HASH_DATE,'%Y') AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM (SELECT HASHERS.HASHER_NAME AS HASHER_NAME, HASHERS.HASHER_KY AS HASHER_KY,
                     FIRST_HASH_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HASH_DATE,
                     (SELECT HASH_KY FROM HASHES WHERE KENNEL_KY=? AND EVENT_DATE=FIRST_HASH_DATE) AS FIRST_HASH_KEY
                FROM HASHERS
                JOIN (SELECT HASHINGS.HASHER_KY AS HASHER_KY, COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
                        FROM HASHINGS
                        JOIN HASHES
                          ON HASHINGS.HASH_KY = HASHES.HASH_KY
                       WHERE HASHES.KENNEL_KY = ?
                       GROUP BY HASHINGS.HASHER_KY) HASH_COUNT_TEMP_TABLE
                  ON HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY
                JOIN (SELECT HASHINGS.HASHER_KY AS HASHER_KY, MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE
                        FROM HASHINGS
                        JOIN HASHES
                          ON HASHINGS.HASH_KY = HASHES.HASH_KY
                       WHERE HASHES.KENNEL_KY = ?
                       GROUP BY HASHINGS.HASHER_KY) FIRST_HASH_EVENT_TABLE
                  ON HASHERS.HASHER_KY = FIRST_HASH_EVENT_TABLE.HASHER_KY
               WHERE HASH_COUNT_TEMP_TABLE.HASH_COUNT >= ?
               ORDER BY FIRST_HASH_DATE ASC) TEMP2
       GROUP BY DATE_FORMAT(FIRST_HASH_DATE,'%Y')
       ORDER BY DATE_FORMAT(FIRST_HASH_DATE,'%Y') ASC";
  }

  public function getNewcomersByMonth() : string {
    return "
      SELECT MONTH(FIRST_HASH_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM (SELECT HASHERS.HASHER_NAME AS HASHER_NAME, HASHERS.HASHER_KY AS HASHER_KY, 
                     FIRST_HASH_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HASH_DATE
                FROM HASHERS
                JOIN (SELECT HASHINGS.HASHER_KY AS HASHER_KY, COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
                        FROM HASHINGS
                        JOIN HASHES
                          ON HASHINGS.HASH_KY = HASHES.HASH_KY
                       WHERE HASHES.KENNEL_KY = ?
                       GROUP BY HASHINGS.HASHER_KY) HASH_COUNT_TEMP_TABLE
                  ON HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY
                JOIN (SELECT HASHINGS.HASHER_KY AS HASHER_KY, MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE
                        FROM HASHINGS
                        JOIN HASHES
                          ON HASHINGS.HASH_KY = HASHES.HASH_KY
                       WHERE HASHES.KENNEL_KY = ?
                       GROUP BY HASHINGS.HASHER_KY) FIRST_HASH_EVENT_TABLE
                  ON HASHERS.HASHER_KY = FIRST_HASH_EVENT_TABLE.HASHER_KY
               WHERE HASH_COUNT_TEMP_TABLE.HASH_COUNT >= ?
               ORDER BY FIRST_HASH_DATE ASC) TEMP2
       GROUP BY MONTH(FIRST_HASH_DATE)
       ORDER BY MONTH(FIRST_HASH_DATE) ASC";
  }

  public function getNewcomersByYearMonth() : string {
    return "
      SELECT DATE_FORMAT(FIRST_HASH_DATE,'%Y/%m') AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM (SELECT HASHERS.HASHER_NAME AS HASHER_NAME, HASHERS.HASHER_KY AS HASHER_KY,
                     FIRST_HASH_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HASH_DATE
                FROM HASHERS
                JOIN (SELECT HASHINGS.HASHER_KY AS HASHER_KY, COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
                        FROM HASHINGS
                        JOIN HASHES
                          ON HASHINGS.HASH_KY = HASHES.HASH_KY
                       WHERE HASHES.KENNEL_KY = ?
                       GROUP BY HASHINGS.HASHER_KY) HASH_COUNT_TEMP_TABLE
                  ON HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY
                JOIN (SELECT HASHINGS.HASHER_KY AS HASHER_KY, MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE
                        FROM HASHINGS
                        JOIN HASHES
                          ON HASHINGS.HASH_KY = HASHES.HASH_KY
                       WHERE HASHES.KENNEL_KY = ?
                       GROUP BY HASHINGS.HASHER_KY) FIRST_HASH_EVENT_TABLE
                  ON HASHERS.HASHER_KY = FIRST_HASH_EVENT_TABLE.HASHER_KY
               WHERE HASH_COUNT_TEMP_TABLE.HASH_COUNT >= ?
               ORDER BY FIRST_HASH_DATE ASC) TEMP2
       GROUP BY DATE_FORMAT(FIRST_HASH_DATE,'%Y/%m')
       ORDER BY DATE_FORMAT(FIRST_HASH_DATE,'%Y/%m') ASC";
  }

  public function getNewcomersByYearQuarter() : string {
    return "
      SELECT CONCAT_WS('/',YEAR(FIRST_HASH_DATE),QUARTER(FIRST_HASH_DATE)) AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM (SELECT HASHERS.HASHER_NAME AS HASHER_NAME, HASHERS.HASHER_KY AS HASHER_KY,
                     FIRST_HASH_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HASH_DATE
                FROM HASHERS
                JOIN (SELECT HASHINGS.HASHER_KY AS HASHER_KY, COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
                        FROM HASHINGS
                        JOIN HASHES
                          ON HASHINGS.HASH_KY = HASHES.HASH_KY
                       WHERE HASHES.KENNEL_KY = ?
                       GROUP BY HASHINGS.HASHER_KY) HASH_COUNT_TEMP_TABLE
                  ON HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY
                JOIN (SELECT HASHINGS.HASHER_KY AS HASHER_KY, MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE
                        FROM HASHINGS
                        JOIN HASHES
                          ON HASHINGS.HASH_KY = HASHES.HASH_KY
                       WHERE HASHES.KENNEL_KY = ?
                       GROUP BY HASHINGS.HASHER_KY) FIRST_HASH_EVENT_TABLE
                  ON HASHERS.HASHER_KY = FIRST_HASH_EVENT_TABLE.HASHER_KY
               WHERE HASH_COUNT_TEMP_TABLE.HASH_COUNT >= ?
               ORDER BY FIRST_HASH_DATE ASC) TEMP2
       GROUP BY CONCAT_WS('/',YEAR(FIRST_HASH_DATE),QUARTER(FIRST_HASH_DATE))
       ORDER BY CONCAT_WS('/',YEAR(FIRST_HASH_DATE),QUARTER(FIRST_HASH_DATE)) ASC";
  }

  public function getDepartersByYearMonth() : string {
    return "
      SELECT DATE_FORMAT(LATEST_HASH_DATE,'%Y/%m') AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM (SELECT HASHERS.HASHER_NAME AS HASHER_NAME, HASHERS.HASHER_KY AS HASHER_KY,
                     HASH_COUNT_TEMP_TABLE.HASH_COUNT AS HASH_COUNT,
                     LATEST_HASH_EVENT_TABLE.LATEST_HASH_DATE AS LATEST_HASH_DATE
                FROM HASHERS
                JOIN (SELECT HASHINGS.HASHER_KY AS HASHER_KY, COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
                        FROM HASHINGS
                        JOIN HASHES
                          ON HASHINGS.HASH_KY = HASHES.HASH_KY
                       WHERE HASHES.KENNEL_KY = ?
                       GROUP BY HASHINGS.HASHER_KY) HASH_COUNT_TEMP_TABLE
                  ON HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY
                JOIN (SELECT HASHINGS.HASHER_KY AS HASHER_KY, MAX(HASHES.EVENT_DATE) AS LATEST_HASH_DATE
                        FROM HASHINGS
                        JOIN HASHES
                          ON HASHINGS.HASH_KY = HASHES.HASH_KY
                       WHERE HASHES.KENNEL_KY = ?
                       GROUP BY HASHINGS.HASHER_KY) LATEST_HASH_EVENT_TABLE
                  ON HASHERS.HASHER_KY = LATEST_HASH_EVENT_TABLE.HASHER_KY
       WHERE HASH_COUNT_TEMP_TABLE.HASH_COUNT >= ?
         AND LATEST_HASH_DATE < CURDATE() - INTERVAL ? MONTH) TEMP2
       GROUP BY DATE_FORMAT(LATEST_HASH_DATE,'%Y/%m')
       ORDER BY DATE_FORMAT(LATEST_HASH_DATE,'%Y/%m') ASC";
  }

  public function getDepartersByYear() : string {
    return "
      SELECT DATE_FORMAT(LATEST_HASH_DATE,'%Y') AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM (SELECT HASHERS.HASHER_NAME AS HASHER_NAME, HASHERS.HASHER_KY AS HASHER_KY, HASH_COUNT_TEMP_TABLE.HASH_COUNT AS HASH_COUNT,
                     LATEST_HASH_EVENT_TABLE.LATEST_HASH_DATE AS LATEST_HASH_DATE
                FROM HASHERS
                JOIN (SELECT HASHINGS.HASHER_KY AS HASHER_KY, COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
                        FROM HASHINGS
                        JOIN HASHES
                          ON HASHINGS.HASH_KY = HASHES.HASH_KY
                       WHERE HASHES.KENNEL_KY = ?
                       GROUP BY HASHINGS.HASHER_KY) HASH_COUNT_TEMP_TABLE
                  ON HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY
                JOIN (SELECT HASHINGS.HASHER_KY AS HASHER_KY, MAX(HASHES.EVENT_DATE) AS LATEST_HASH_DATE
                        FROM HASHINGS
                        JOIN HASHES
                          ON HASHINGS.HASH_KY = HASHES.HASH_KY
                       WHERE HASHES.KENNEL_KY = ?
                       GROUP BY HASHINGS.HASHER_KY) LATEST_HASH_EVENT_TABLE
                  ON HASHERS.HASHER_KY = LATEST_HASH_EVENT_TABLE.HASHER_KY
               WHERE HASH_COUNT_TEMP_TABLE.HASH_COUNT >= ?
                 AND LATEST_HASH_DATE < CURDATE() - INTERVAL ? MONTH) TEMP2
       GROUP BY DATE_FORMAT(LATEST_HASH_DATE,'%Y')
       ORDER BY DATE_FORMAT(LATEST_HASH_DATE,'%Y') ASC";
  }

  public function getDepartersByYearQuarter() : string {
    return "
      SELECT CONCAT_WS('/',YEAR(LATEST_HASH_DATE),QUARTER(LATEST_HASH_DATE)) AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM (SELECT HASHERS.HASHER_NAME AS HASHER_NAME, HASHERS.HASHER_KY AS HASHER_KY, HASH_COUNT_TEMP_TABLE.HASH_COUNT AS HASH_COUNT,
                     LATEST_HASH_EVENT_TABLE.LATEST_HASH_DATE AS LATEST_HASH_DATE
                FROM HASHERS
                JOIN (SELECT HASHINGS.HASHER_KY AS HASHER_KY, COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
                        FROM HASHINGS
                        JOIN HASHES
                          ON HASHINGS.HASH_KY = HASHES.HASH_KY
                       WHERE HASHES.KENNEL_KY = ?
                       GROUP BY HASHINGS.HASHER_KY) HASH_COUNT_TEMP_TABLE
                  ON HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY
                JOIN (SELECT HASHINGS.HASHER_KY AS HASHER_KY, MAX(HASHES.EVENT_DATE) AS LATEST_HASH_DATE
                        FROM HASHINGS
                        JOIN HASHES
                          ON HASHINGS.HASH_KY = HASHES.HASH_KY
                       WHERE HASHES.KENNEL_KY = ?
                       GROUP BY HASHINGS.HASHER_KY) LATEST_HASH_EVENT_TABLE
                  ON HASHERS.HASHER_KY = LATEST_HASH_EVENT_TABLE.HASHER_KY
               WHERE HASH_COUNT_TEMP_TABLE.HASH_COUNT >= ?
                 AND LATEST_HASH_DATE < CURDATE() - INTERVAL ? MONTH) TEMP2
       GROUP BY CONCAT_WS('/',YEAR(LATEST_HASH_DATE),QUARTER(LATEST_HASH_DATE))
       ORDER BY CONCAT_WS('/',YEAR(LATEST_HASH_DATE),QUARTER(LATEST_HASH_DATE)) ASC";
  }

  public function getDepartersByMonth() : string {
    return "
      SELECT DATE_FORMAT(LATEST_HASH_DATE,'%m') AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM (SELECT HASHERS.HASHER_NAME AS HASHER_NAME, HASHERS.HASHER_KY AS HASHER_KY, HASH_COUNT_TEMP_TABLE.HASH_COUNT AS HASH_COUNT,
                     LATEST_HASH_EVENT_TABLE.LATEST_HASH_DATE AS LATEST_HASH_DATE
                FROM HASHERS
                JOIN (SELECT HASHINGS.HASHER_KY AS HASHER_KY, COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT
                        FROM HASHINGS
                        JOIN HASHES
                          ON HASHINGS.HASH_KY = HASHES.HASH_KY
                       WHERE HASHES.KENNEL_KY = ?
                       GROUP BY HASHINGS.HASHER_KY) HASH_COUNT_TEMP_TABLE
                  ON HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY
                JOIN (SELECT HASHINGS.HASHER_KY AS HASHER_KY, MAX(HASHES.EVENT_DATE) AS LATEST_HASH_DATE
                        FROM HASHINGS
                        JOIN HASHES
                          ON HASHINGS.HASH_KY = HASHES.HASH_KY
                       WHERE HASHES.KENNEL_KY = ?
                       GROUP BY HASHINGS.HASHER_KY) LATEST_HASH_EVENT_TABLE
                  ON HASHERS.HASHER_KY = LATEST_HASH_EVENT_TABLE.HASHER_KY
               WHERE HASH_COUNT_TEMP_TABLE.HASH_COUNT >= ?
                 AND LATEST_HASH_DATE < CURDATE() - INTERVAL ? MONTH) TEMP2
       GROUP BY DATE_FORMAT(LATEST_HASH_DATE,'%m')
       ORDER BY DATE_FORMAT(LATEST_HASH_DATE,'%m') ASC";
  }

  public function getVirginHaringsByYear() : string {
    return "
      SELECT DATE_FORMAT(FIRST_HARING_DATE,'%Y') AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM (SELECT HASHERS.HASHER_NAME AS HASHER_NAME, HASHERS.HASHER_KY AS HASHER_KY,
                     FIRST_HARING_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HARING_DATE,
                     (SELECT HASH_KY
                        FROM HASHES
                       WHERE KENNEL_KY=?
                         AND EVENT_DATE=FIRST_HASH_DATE) AS FIRST_HARING_KEY
                FROM HASHERS
                JOIN (SELECT HARINGS.HARINGS_HASHER_KY AS HASHER_KY, MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE
                        FROM HARINGS
                        JOIN HASHES
                          ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
                       WHERE HASHES.KENNEL_KY = ?
                         AND HARINGS.HARE_TYPE & ? != 0
                       GROUP BY HARINGS.HARINGS_HASHER_KY) FIRST_HARING_EVENT_TABLE
                  ON HASHERS.HASHER_KY = FIRST_HARING_EVENT_TABLE.HASHER_KY) TEMP2
       GROUP BY DATE_FORMAT(FIRST_HARING_DATE,'%Y')
       ORDER BY DATE_FORMAT(FIRST_HARING_DATE,'%Y') ASC";
  }

  public function getVirginHaringsByMonth() : string {
    return "
      SELECT MONTH(FIRST_HARING_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM (SELECT HASHERS.HASHER_NAME AS HASHER_NAME, HASHERS.HASHER_KY AS HASHER_KY,
                     FIRST_HARING_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HARING_DATE
                FROM HASHERS
                JOIN (SELECT HARINGS.HARINGS_HASHER_KY AS HASHER_KY, MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE
                        FROM HARINGS
                        JOIN HASHES
                          ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
                       WHERE HASHES.KENNEL_KY = ?
                         AND HARINGS.HARE_TYPE & ? != 0
                       GROUP BY HARINGS.HARINGS_HASHER_KY) FIRST_HARING_EVENT_TABLE
                  ON HASHERS.HASHER_KY = FIRST_HARING_EVENT_TABLE.HASHER_KY) TEMP2
       GROUP BY MONTH(FIRST_HARING_DATE)
       ORDER BY MONTH(FIRST_HARING_DATE) ASC";
  }

  public function getVirginHaringsByYearQuarter() : string {
    return "
      SELECT CONCAT_WS('/',YEAR(FIRST_HARING_DATE),QUARTER(FIRST_HARING_DATE)) AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM (SELECT HASHERS.HASHER_NAME AS HASHER_NAME, HASHERS.HASHER_KY AS HASHER_KY,
                     FIRST_HARING_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HARING_DATE
                FROM HASHERS
                JOIN (SELECT HARINGS.HARINGS_HASHER_KY AS HASHER_KY, MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE
                        FROM HARINGS
                        JOIN HASHES
                          ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
                       WHERE HASHES.KENNEL_KY = ?
                         AND HARINGS.HARE_TYPE & ? != 0
                       GROUP BY HARINGS.HARINGS_HASHER_KY) FIRST_HARING_EVENT_TABLE
                  ON HASHERS.HASHER_KY = FIRST_HARING_EVENT_TABLE.HASHER_KY) TEMP2
       GROUP BY CONCAT_WS('/',YEAR(FIRST_HARING_DATE),QUARTER(FIRST_HARING_DATE))
       ORDER BY CONCAT_WS('/',YEAR(FIRST_HARING_DATE),QUARTER(FIRST_HARING_DATE)) ASC";
  }

  public function getVirginHaringsByYearMonth() : string {
    return "
      SELECT DATE_FORMAT(FIRST_HARING_DATE,'%Y/%m') AS THE_VALUE, COUNT(*) AS THE_COUNT
        FROM (SELECT HASHERS.HASHER_NAME AS HASHER_NAME, HASHERS.HASHER_KY AS HASHER_KY,
                     FIRST_HARING_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HARING_DATE
                FROM HASHERS
                JOIN (SELECT HARINGS.HARINGS_HASHER_KY AS HASHER_KY, MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE
                        FROM HARINGS
                        JOIN HASHES
                          ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
                       WHERE HASHES.KENNEL_KY = ?
                         AND HARINGS.HARE_TYPE & ? != 0
                       GROUP BY HARINGS.HARINGS_HASHER_KY) FIRST_HARING_EVENT_TABLE
                  ON HASHERS.HASHER_KY = FIRST_HARING_EVENT_TABLE.HASHER_KY) TEMP2
       GROUP BY DATE_FORMAT(FIRST_HARING_DATE,'%Y/%m')
       ORDER BY DATE_FORMAT(FIRST_HARING_DATE,'%Y/%m') ASC";
  }

}


/*


DEFINE("DISTINCT_HASHERS_BY_YEAR_QUARTER","SELECT THE_TIME_UNIT AS THE_VALUE, COUNT(*) AS THE_COUNT FROM
(
        SELECT
                HASHERS.HASHER_NAME, CONCAT_WS('/',YEAR(HASHES.EVENT_DATE),QUARTER(HASHES.EVENT_DATE)) AS THE_TIME_UNIT, COUNT(*) AS THE_COUNT
        FROM HASHINGS
        JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
        JOIN HASHERS ON HASHINGS.HASHER_KY = HASHERS.HASHER_KY
        WHERE
                HASHES.KENNEL_KY = ?
        GROUP BY HASHERS.HASHER_NAME, CONCAT_WS('/',YEAR(HASHES.EVENT_DATE),QUARTER(HASHES.EVENT_DATE))
) TEMP
GROUP BY THE_TIME_UNIT
ORDER BY THE_TIME_UNIT ASC");

DEFINE("DISTINCT_HARES_BY_YEAR_QUARTER","SELECT THE_TIME_UNIT AS THE_VALUE, COUNT(*) AS THE_COUNT FROM
(
        SELECT
                HASHERS.HASHER_NAME, CONCAT_WS('/',YEAR(HASHES.EVENT_DATE),QUARTER(HASHES.EVENT_DATE)) AS THE_TIME_UNIT, COUNT(*) AS THE_COUNT
        FROM HARINGS
        JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
        JOIN HARE_TYPES ON HARINGS.HARE_TYPE & HARE_TYPES.HARE_TYPE = HARE_TYPES.HARE_TYPE
        JOIN HASHERS ON HARINGS.HARINGS_HASHER_KY = HASHERS.HASHER_KY
        WHERE HASHES.KENNEL_KY = ?
        AND HARINGS.HARE_TYPE & ? != 0
        GROUP BY HASHERS.HASHER_NAME, CONCAT_WS('/',YEAR(HASHES.EVENT_DATE),QUARTER(HASHES.EVENT_DATE))
) TEMP
GROUP BY THE_TIME_UNIT
ORDER BY THE_TIME_UNIT ASC");

DEFINE("DISTINCT_HASHERS_BY_YEAR","SELECT THE_TIME_UNIT AS THE_VALUE, COUNT(*) AS THE_COUNT FROM
(
        SELECT
                HASHERS.HASHER_NAME, YEAR(HASHES.EVENT_DATE) AS THE_TIME_UNIT, COUNT(*) AS THE_COUNT
        FROM HASHINGS
        JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
        JOIN HASHERS ON HASHINGS.HASHER_KY = HASHERS.HASHER_KY
        WHERE
                HASHES.KENNEL_KY = ?
        GROUP BY HASHERS.HASHER_NAME, YEAR(HASHES.EVENT_DATE)
) TEMP
GROUP BY THE_TIME_UNIT
ORDER BY THE_TIME_UNIT ASC");

DEFINE("DISTINCT_HARES_BY_YEAR","SELECT THE_TIME_UNIT AS THE_VALUE, COUNT(*) AS THE_COUNT FROM
(
        SELECT
                HASHERS.HASHER_NAME, YEAR(HASHES.EVENT_DATE) AS THE_TIME_UNIT, COUNT(*) AS THE_COUNT
        FROM HARINGS
        JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
        JOIN HASHERS ON HARINGS.HARINGS_HASHER_KY = HASHERS.HASHER_KY
        WHERE HASHES.KENNEL_KY = ?
        AND HARINGS.HARE_TYPE & ? != 0
        GROUP BY HASHERS.HASHER_NAME, YEAR(HASHES.EVENT_DATE)
) TEMP
GROUP BY THE_TIME_UNIT
ORDER BY THE_TIME_UNIT ASC");


DEFINE("NEW_HASHERS_FOR_THIS_YEAR","SELECT
        HASHERS.HASHER_NAME AS HASHER_NAME,
    (
                SELECT COUNT(*) AS THE_COUNT
        FROM HASHINGS
        JOIN HASHES ON HASHES.HASH_KY = HASHINGS.HASH_KY
        WHERE
                        HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY
            AND HASHES.KENNEL_KY = HASH_COUNT_TEMP_TABLE.KENNEL_KY ) AS THE_COUNT
FROM
        ((HASHERS
        JOIN (
                SELECT
                        HASHINGS.HASHER_KY AS HASHER_KY,
                        COUNT(HASHINGS.HASHER_KY) AS HASH_COUNT,
            HASHES.KENNEL_KY AS KENNEL_KY
                FROM
                        HASHINGS
                        JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
                WHERE
                        HASHES.KENNEL_KY = ?
                GROUP BY HASHINGS.HASHER_KY
                ) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY)))
        JOIN (
                SELECT
                        HASHINGS.HASHER_KY AS HASHER_KY,
                        MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE
                FROM
                        HASHINGS
                        JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
                WHERE
                        HASHES.KENNEL_KY = ?
                GROUP BY HASHINGS.HASHER_KY
                ) FIRST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = FIRST_HASH_EVENT_TABLE.HASHER_KY)))
WHERE
        (HASH_COUNT_TEMP_TABLE.HASH_COUNT >= 0)
        AND DATE_FORMAT(FIRST_HASH_DATE,'%Y') = ?
ORDER BY THE_COUNT DESC");

DEFINE("NEW_HARES_FOR_THIS_YEAR","SELECT
        HASHERS.HASHER_NAME AS HASHER_NAME,
        HASHERS.HASHER_KY AS HASHER_KY,
        FIRST_HASH_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HASH_DATE,
  (
                SELECT COUNT(*) AS THE_COUNT
        FROM HARINGS
        JOIN HARE_TYPES ON HARINGS.HARE_TYPE & HARE_TYPES.HARE_TYPE = HARE_TYPES.HARE_TYPE
        JOIN HASHES ON HASHES.HASH_KY = HARINGS.HARINGS_HASH_KY
        WHERE
                        HARINGS_HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY
            AND HASHES.KENNEL_KY = HASH_COUNT_TEMP_TABLE.KENNEL_KY) AS THE_COUNT
FROM
        ((HASHERS
        JOIN (
                SELECT
                        HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
                        COUNT(HARINGS.HARINGS_HASHER_KY) AS HASH_COUNT,
            HASHES.KENNEL_KY AS KENNEL_KY
                FROM
                        HARINGS
                        JOIN HARE_TYPES ON HARINGS.HARE_TYPE & HARE_TYPES.HARE_TYPE = HARE_TYPES.HARE_TYPE
                        JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
                WHERE
                        HASHES.KENNEL_KY = ?
                GROUP BY HARINGS.HARINGS_HASHER_KY
                ) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY)))
        JOIN (
                SELECT
                        HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
                        MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE
                FROM
                        HARINGS
                        JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
                WHERE
                        HASHES.KENNEL_KY = ?
                GROUP BY HARINGS.HARINGS_HASHER_KY
                ) FIRST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = FIRST_HASH_EVENT_TABLE.HASHER_KY)))
WHERE
        (HASH_COUNT_TEMP_TABLE.HASH_COUNT >= 1)
        AND DATE_FORMAT(FIRST_HASH_DATE,'%Y') = ?
ORDER BY THE_COUNT DESC");

DEFINE("NEW_HARES_FOR_THIS_YEAR_BY_HARE_TYPE","SELECT
        HASHERS.HASHER_NAME AS HASHER_NAME,
        HASHERS.HASHER_KY AS HASHER_KY,
        FIRST_HASH_EVENT_TABLE.FIRST_HASH_DATE AS FIRST_HASH_DATE,
  (
                SELECT COUNT(*) AS THE_COUNT
        FROM HARINGS
        JOIN HASHES ON HASHES.HASH_KY = HARINGS.HARINGS_HASH_KY
        WHERE
                        HARINGS_HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY
            AND HARINGS.HARE_TYPE & ? != 0
            AND HASHES.KENNEL_KY = HASH_COUNT_TEMP_TABLE.KENNEL_KY) AS THE_COUNT
FROM
        ((HASHERS
        JOIN (
                SELECT
                        HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
                        COUNT(HARINGS.HARINGS_HASHER_KY) AS HASH_COUNT,
            HASHES.KENNEL_KY AS KENNEL_KY
                FROM
                        HARINGS
                        JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
                WHERE
                        HASHES.KENNEL_KY = ?
                    AND HARINGS.HARE_TYPE & ? != 0
                GROUP BY HARINGS.HARINGS_HASHER_KY
                ) HASH_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HASH_COUNT_TEMP_TABLE.HASHER_KY)))
        JOIN (
                SELECT
                        HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
                        MIN(HASHES.EVENT_DATE) AS FIRST_HASH_DATE
                FROM
                        HARINGS
                        JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
                WHERE
                        HASHES.KENNEL_KY = ?
                    AND HARINGS.HARE_TYPE & ? != 0
                GROUP BY HARINGS.HARINGS_HASHER_KY
                ) FIRST_HASH_EVENT_TABLE ON ((HASHERS.HASHER_KY = FIRST_HASH_EVENT_TABLE.HASHER_KY)))
WHERE
        (HASH_COUNT_TEMP_TABLE.HASH_COUNT >= 1)
        AND DATE_FORMAT(FIRST_HASH_DATE,'%Y') = ?
ORDER BY THE_COUNT DESC");

define("HASHER_COUNTS_BY_YEAR","SELECT HASHERS.HASHER_NAME AS HASHER_NAME,count(*) AS THE_COUNT
  FROM (
    HASHERS
      JOIN HASHINGS ON(HASHERS.HASHER_KY = HASHINGS.HASHER_KY))
      JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  WHERE
    YEAR(HASHES.EVENT_DATE) = ? AND HASHES.KENNEL_KY = ?
  GROUP BY HASHERS.HASHER_NAME ORDER BY THE_COUNT DESC"
);

define("PER_KENNEL_HASH_COUNTS_BY_YEAR","SELECT COUNT(*) AS THE_COUNT
        FROM HASHES
        WHERE YEAR(HASHES.EVENT_DATE) = ? AND HASHES.KENNEL_KY = ?"
);

define("PER_KENNEL_HASHERS_COUNT_BY_YEAR","SELECT COUNT(DISTINCT HASHERS.HASHER_KY) AS THE_COUNT
FROM
    HASHERS
      JOIN HASHINGS ON(HASHERS.HASHER_KY = HASHINGS.HASHER_KY)
      JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  WHERE
    YEAR(HASHES.EVENT_DATE) = ? AND HASHES.KENNEL_KY = ?");

define("PER_KENNEL_HARES_COUNT_BY_YEAR","SELECT COUNT(DISTINCT HASHERS.HASHER_KY, HARINGS.HARE_TYPE) AS THE_COUNT
FROM
    HASHERS
      JOIN HARINGS ON(HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY)
      JOIN HARE_TYPES ON HARINGS.HARE_TYPE & HARE_TYPES.HARE_TYPE = HARE_TYPES.HARE_TYPE
      JOIN HASHES ON HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
    YEAR(HASHES.EVENT_DATE) = ? AND HASHES.KENNEL_KY = ?");

define("TOTAL_HARE_COUNTS_BY_YEAR","SELECT HASHERS.HASHER_NAME AS HASHER_NAME,count(*) AS THE_COUNT
FROM (
        HASHERS
    JOIN HARINGS ON(HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY))
    JOIN HARE_TYPES ON HARINGS.HARE_TYPE & HARE_TYPES.HARE_TYPE = HARE_TYPES.HARE_TYPE
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
WHERE
        YEAR(HASHES.EVENT_DATE) = ? AND HASHES.KENNEL_KY = ?
GROUP BY HASHERS.HASHER_NAME ORDER BY THE_COUNT DESC");

define("HARE_COUNTS_BY_YEAR_BY_HARE_TYPE","SELECT HASHERS.HASHER_NAME AS HASHER_NAME,count(*) AS THE_COUNT
FROM (
        HASHERS
    JOIN HARINGS ON(HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY))
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
WHERE
        YEAR(HASHES.EVENT_DATE) = ? AND
    HARINGS.HARE_TYPE & ? != 0 AND HASHES.KENNEL_KY = ?
GROUP BY HASHERS.HASHER_NAME ORDER BY THE_COUNT DESC");





define ("HASHER_HASH_COUNTS_BY_YEAR","SELECT YEAR(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
        HASHINGS
    JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  WHERE
        HASHINGS.HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY YEAR(EVENT_DATE)
ORDER BY YEAR(EVENT_DATE)");

define("HASHER_HASH_COUNTS_BY_MONTH","SELECT MONTH(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
        HASHINGS
    JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
  WHERE
        HASHINGS.HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY MONTH(EVENT_DATE)
ORDER BY MONTH(EVENT_DATE)");



define("HASHER_ALL_HARING_COUNTS_BY_YEAR","SELECT YEAR(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
        HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
    JOIN HARE_TYPES ON HARINGS.HARE_TYPE & HARE_TYPES.HARE_TYPE = HARE_TYPES.HARE_TYPE
  WHERE
        HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY YEAR(EVENT_DATE)
ORDER BY YEAR(EVENT_DATE)");

define("HASHER_ALL_HARING_COUNTS_BY_MONTH","SELECT MONTH(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
        HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
    JOIN HARE_TYPES ON HARINGS.HARE_TYPE & HARE_TYPES.HARE_TYPE = HARE_TYPES.HARE_TYPE
  WHERE
        HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY MONTH(EVENT_DATE)
ORDER BY MONTH(EVENT_DATE)");






define("HASHER_ALL_HARING_COUNTS_BY_DAYNAME","SELECT DAYNAME(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
        HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
    JOIN HARE_TYPES ON HARINGS.HARE_TYPE & HARE_TYPES.HARE_TYPE = HARE_TYPES.HARE_TYPE
  WHERE
        HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY DAYNAME(EVENT_DATE)
ORDER BY DAYNAME(EVENT_DATE)");

define("HASHER_ALL_HARING_COUNTS_BY_STATE","SELECT HASHES.EVENT_STATE AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
        HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
    JOIN HARE_TYPES ON HARINGS.HARE_TYPE & HARE_TYPES.HARE_TYPE = HARE_TYPES.HARE_TYPE
  WHERE
        HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ?
GROUP BY HASHES.EVENT_STATE
ORDER BY THE_COUNT DESC");

define("HASHER_HARING_COUNTS_BY_YEAR","SELECT YEAR(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
        HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
        HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ? AND
                HARINGS.HARE_TYPE & ? != 0
GROUP BY YEAR(EVENT_DATE)
ORDER BY YEAR(EVENT_DATE)");




define("HASHER_HARING_COUNTS_BY_DAYNAME","SELECT DAYNAME(EVENT_DATE) AS THE_VALUE, COUNT(*) AS THE_COUNT
 FROM
        HARINGS
    JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
  WHERE
        HARINGS.HARINGS_HASHER_KY = ? AND
    HASHES.KENNEL_KY = ? AND
                HARINGS.HARE_TYPE & ? != 0
GROUP BY DAYNAME(EVENT_DATE)
ORDER BY DAYNAME(EVENT_DATE)");




DEFINE("GRANDTOTAL_NONDISTINCT_HASH_ATTENDANCE_BY_HARE","SELECT
        HASHERS.HASHER_KY AS THE_KEY,
        HASHERS.HASHER_NAME AS NAME,
        SUM(TEMPTABLE.THE_COUNT) AS VALUE
FROM
        (((HASHERS
        JOIN HARINGS ON ((HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY)))
        JOIN HASHES ON ((HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY)))
        JOIN
    (
                SELECT
                        HASHINGS.HASH_KY AS THE_HASH_KEY,
                        COUNT(0) AS THE_COUNT
                FROM
                        HASHES
                        JOIN HASHINGS ON HASHES.HASH_KY = HASHINGS.HASH_KY
                WHERE
                        HASHES.KENNEL_KY = ?
                GROUP BY HASHINGS.HASH_KY
        ) TEMPTABLE ON HASHES.HASH_KY = TEMPTABLE.THE_HASH_KEY)
GROUP BY HASHERS.HASHER_KY,HASHERS.HASHER_NAME
ORDER BY VALUE DESC");

DEFINE ("GRANDTOTAL_DISTINCT_HASH_ATTENDANCE_BY_HARE","SELECT
        HASHERS.HASHER_KY AS THE_KEY,
        HASHERS.HASHER_NAME AS NAME,
        COUNT(DISTINCT HASHINGS.HASHER_KY) AS VALUE
FROM
        HASHERS
        JOIN HARINGS ON HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY
        JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
        JOIN HASHINGS ON HASHES.HASH_KY = HASHINGS.HASH_KY
WHERE HASHES.KENNEL_KY = ?
GROUP BY HASHERS.HASHER_KY, HASHERS.HASHER_NAME
ORDER BY VALUE DESC");



DEFINE("PENDING_HARE_ANALVERSARIES","SELECT
        HASHERS.HASHER_NAME AS HASHER_NAME,
        HASHERS.HASHER_KY,
        (COUNT(0) + ?) AS THE_COUNT_INCREMENTED,
        TIMESTAMPDIFF(YEAR,
                MAX(HASHES.EVENT_DATE),
                CURDATE()) AS YEARS_ABSENCE
FROM
        ((HASHERS
        JOIN HARINGS ON ((HASHERS.HASHER_KY = HARINGS.HARINGS_HASHER_KY)))
        JOIN HASHES ON ((HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY)))
        JOIN HARE_TYPES ON HARINGS.HARE_TYPE & HARE_TYPES.HARE_TYPE = HARE_TYPES.HARE_TYPE
WHERE HASHES.KENNEL_KY = ?
GROUP BY HASHERS.HASHER_NAME, HASHERS.HASHER_KY
HAVING ((((THE_COUNT_INCREMENTED % 5) = 0)
        OR ((THE_COUNT_INCREMENTED % 69) = 0)
        OR ((THE_COUNT_INCREMENTED % 666) = 0)
        OR (((THE_COUNT_INCREMENTED - 69) % 100) = 0))
        AND (YEARS_ABSENCE < ?))
ORDER BY THE_COUNT_INCREMENTED DESC");


DEFINE("LOWEST_NUMBER_OF_DAYS_BETWEEN_HARINGS","SELECT
        HASHERS.HASHER_NAME AS HASHER_NAME,
        HASHERS.HASHER_KY AS HASHER_KY,
        HARING_COUNT_TEMP_TABLE.HARING_COUNT AS HARING_COUNT,
        FIRST_HARING_EVENT_TABLE.FIRST_HARING_DATE AS FIRST_HARING_DATE,
    (SELECT HASH_KY FROM HASHES WHERE KENNEL_KY=? AND EVENT_DATE=FIRST_HARING_DATE) AS FIRST_HARING_KEY,
    LATEST_HARING_EVENT_TABLE.LATEST_HARING_DATE AS LATEST_HARING_DATE,
    (SELECT HASH_KY FROM HASHES WHERE KENNEL_KY=? AND EVENT_DATE=LATEST_HARING_DATE) AS LATEST_HARING_KEY,
    DATEDIFF(LATEST_HARING_DATE,FIRST_HARING_DATE) DIFFERENCE,
    ((DATEDIFF(LATEST_HARING_DATE,FIRST_HARING_DATE)) / (HARING_COUNT-1)) AS DAYS_BETWEEN_HARINGS
FROM
        ((HASHERS
        JOIN (
                SELECT
                        HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
                        COUNT(HARINGS.HARINGS_HASHER_KY) AS HARING_COUNT
                FROM
                        HARINGS
            JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
                WHERE
                        HASHES.KENNEL_KY = ?
                GROUP BY HARINGS.HARINGS_HASHER_KY
        ) HARING_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HARING_COUNT_TEMP_TABLE.HASHER_KY)))
        JOIN (
                SELECT
                        HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
                        MIN(HASHES.EVENT_DATE) AS FIRST_HARING_DATE
                FROM
                        HARINGS
            JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
                WHERE
                        HASHES.KENNEL_KY = ?
                GROUP BY HARINGS.HARINGS_HASHER_KY
        ) FIRST_HARING_EVENT_TABLE ON ((HASHERS.HASHER_KY = FIRST_HARING_EVENT_TABLE.HASHER_KY)))
        JOIN (
                SELECT
                        HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
                        MAX(HASHES.EVENT_DATE) AS LATEST_HARING_DATE
                FROM
                        HARINGS
            JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
                WHERE
                        HASHES.KENNEL_KY = ?
                GROUP BY HARINGS.HARINGS_HASHER_KY
        ) LATEST_HARING_EVENT_TABLE ON ((HASHERS.HASHER_KY = LATEST_HARING_EVENT_TABLE.HASHER_KY))
WHERE
        (HARING_COUNT_TEMP_TABLE.HARING_COUNT >= ?)
  AND   (HARING_COUNT_TEMP_TABLE.HARING_COUNT > 1)
ORDER BY XORDERCOLUMNX XUPORDOWNX");

DEFINE("LOWEST_NUMBER_OF_DAYS_BETWEEN_HARINGS_BY_TYPE","SELECT
        HASHERS.HASHER_NAME AS HASHER_NAME,
        HASHERS.HASHER_KY AS HASHER_KY,
        HARING_COUNT_TEMP_TABLE.HARING_COUNT AS HARING_COUNT,
        FIRST_HARING_EVENT_TABLE.FIRST_HARING_DATE AS FIRST_HARING_DATE,
    (SELECT HASH_KY FROM HASHES WHERE KENNEL_KY=? AND EVENT_DATE=FIRST_HARING_DATE) AS FIRST_HARING_KEY,
    LATEST_HARING_EVENT_TABLE.LATEST_HARING_DATE AS LATEST_HARING_DATE,
    (SELECT HASH_KY FROM HASHES WHERE KENNEL_KY=? AND EVENT_DATE=LATEST_HARING_DATE) AS LATEST_HARING_KEY,
    DATEDIFF(LATEST_HARING_DATE,FIRST_HARING_DATE) DIFFERENCE,
    ((DATEDIFF(LATEST_HARING_DATE,FIRST_HARING_DATE)) / (HARING_COUNT-1)) AS DAYS_BETWEEN_HARINGS
FROM
        ((HASHERS
        JOIN (
                SELECT
                        HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
                        COUNT(HARINGS.HARINGS_HASHER_KY) AS HARING_COUNT
                FROM
                        HARINGS
            JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
                WHERE
                        HASHES.KENNEL_KY = ? AND
                        HARINGS.HARE_TYPE & ? != 0
                GROUP BY HARINGS.HARINGS_HASHER_KY
        ) HARING_COUNT_TEMP_TABLE ON ((HASHERS.HASHER_KY = HARING_COUNT_TEMP_TABLE.HASHER_KY)))
        JOIN (
                SELECT
                        HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
                        MIN(HASHES.EVENT_DATE) AS FIRST_HARING_DATE
                FROM
                        HARINGS
            JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
                WHERE
                        HASHES.KENNEL_KY = ? AND
                        HARINGS.HARE_TYPE & ? != 0
                GROUP BY HARINGS.HARINGS_HASHER_KY
        ) FIRST_HARING_EVENT_TABLE ON ((HASHERS.HASHER_KY = FIRST_HARING_EVENT_TABLE.HASHER_KY)))
        JOIN (
                SELECT
                        HARINGS.HARINGS_HASHER_KY AS HASHER_KY,
                        MAX(HASHES.EVENT_DATE) AS LATEST_HARING_DATE
                FROM
                        HARINGS
            JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
                WHERE
                        HASHES.KENNEL_KY = ? AND
                        HARINGS.HARE_TYPE & ? != 0
                GROUP BY HARINGS.HARINGS_HASHER_KY
        ) LATEST_HARING_EVENT_TABLE ON ((HASHERS.HASHER_KY = LATEST_HARING_EVENT_TABLE.HASHER_KY))
WHERE
        (HARING_COUNT_TEMP_TABLE.HARING_COUNT >= ?)
  AND   (HARING_COUNT_TEMP_TABLE.HARING_COUNT > 1)
ORDER BY XORDERCOLUMNX XUPORDOWNX");



DEFINE("HASH_EVENTS_WITH_COUNTS","
    SELECT THE_COUNT, HASHES.*, DAYNAME(EVENT_DATE) AS EVENT_DAY_NAME, HASH_TYPES.HASH_TYPE_NAME
      FROM HASHES
      JOIN HASH_TYPES
        ON HASHES.HASH_TYPE = HASH_TYPES.HASH_TYPE
      JOIN (SELECT HASHES.HASH_KY AS THE_HASH_KEY, COUNT(*) AS THE_COUNT
              FROM HASHINGS
              JOIN HASHES
                ON HASHINGS.HASH_KY = HASHES.HASH_KY
      WHERE KENNEL_KY = ?
      GROUP BY HASHES.HASH_KY
           ) AS THE_TEMPORARY_TABLE
       ON HASHES.HASH_KY = THE_TEMPORARY_TABLE.THE_HASH_KEY
ORDER BY THE_COUNT XUPORDOWNX
LIMIT XLIMITX");



DEFINE("DISTINCT_HASHERS_BY_YEAR_MONTH","SELECT THE_TIME_UNIT AS THE_VALUE, COUNT(*) AS THE_COUNT FROM
(
        SELECT
                HASHERS.HASHER_NAME, DATE_FORMAT(HASHES.EVENT_DATE,'%Y/%m') AS THE_TIME_UNIT, COUNT(*) AS THE_COUNT
        FROM HASHINGS
        JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
        JOIN HASHERS ON HASHINGS.HASHER_KY = HASHERS.HASHER_KY
        WHERE
                HASHES.KENNEL_KY = ?
        GROUP BY HASHERS.HASHER_NAME, DATE_FORMAT(HASHES.EVENT_DATE,'%Y/%m')
) TEMP
GROUP BY THE_TIME_UNIT
ORDER BY THE_TIME_UNIT ASC");

DEFINE("DISTINCT_HARES_BY_YEAR_MONTH","SELECT THE_TIME_UNIT AS THE_VALUE, COUNT(*) AS THE_COUNT FROM
(
        SELECT
                HASHERS.HASHER_NAME, DATE_FORMAT(HASHES.EVENT_DATE,'%Y/%m') AS THE_TIME_UNIT, COUNT(*) AS THE_COUNT
        FROM HARINGS
        JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
        JOIN HARE_TYPES ON HARINGS.HARE_TYPE & HARE_TYPES.HARE_TYPE = HARE_TYPES.HARE_TYPE
        JOIN HASHERS ON HARINGS.HARINGS_HASHER_KY = HASHERS.HASHER_KY
        WHERE HASHES.KENNEL_KY = ?
        AND HARINGS.HARE_TYPE & ? != 0
        GROUP BY HASHERS.HASHER_NAME, DATE_FORMAT(HASHES.EVENT_DATE,'%Y/%m')
) TEMP
GROUP BY THE_TIME_UNIT
ORDER BY THE_TIME_UNIT ASC");

DEFINE("DISTINCT_HASHERS_BY_MONTH","SELECT THE_TIME_UNIT AS THE_VALUE, COUNT(*) AS THE_COUNT FROM
(
        SELECT
                HASHERS.HASHER_NAME, DATE_FORMAT(HASHES.EVENT_DATE,'%m') AS THE_TIME_UNIT, COUNT(*) AS THE_COUNT
        FROM HASHINGS
        JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
        JOIN HASHERS ON HASHINGS.HASHER_KY = HASHERS.HASHER_KY
        WHERE
                HASHES.KENNEL_KY = ?
        GROUP BY HASHERS.HASHER_NAME, DATE_FORMAT(HASHES.EVENT_DATE,'%m')
) TEMP
GROUP BY THE_TIME_UNIT
ORDER BY THE_TIME_UNIT ASC");

DEFINE("DISTINCT_HARES_BY_MONTH","SELECT THE_TIME_UNIT AS THE_VALUE, COUNT(*) AS THE_COUNT FROM
(
        SELECT
                HASHERS.HASHER_NAME, DATE_FORMAT(HASHES.EVENT_DATE,'%m') AS THE_TIME_UNIT, COUNT(*) AS THE_COUNT
        FROM HARINGS
        JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
        JOIN HARE_TYPES ON HARINGS.HARE_TYPE & HARE_TYPES.HARE_TYPE = HARE_TYPES.HARE_TYPE
        JOIN HASHERS ON HARINGS.HARINGS_HASHER_KY = HASHERS.HASHER_KY
        WHERE HASHES.KENNEL_KY = ?
        AND HARINGS.HARE_TYPE & ? != 0
        GROUP BY HASHERS.HASHER_NAME, DATE_FORMAT(HASHES.EVENT_DATE,'%m')
) TEMP
GROUP BY THE_TIME_UNIT
ORDER BY THE_TIME_UNIT ASC");



DEFINE("INDIVIDUAL_HASHER_ATTENDANCE_RECORD","SELECT
        CASE
                WHEN TENDERS.HASH_KY IS NULL THEN 'NO'
        ELSE 'YES'
        END AS ATTENDED,
    HASHES.* FROM (
                SELECT HASHINGS.HASH_KY, HASHES.EVENT_DATE
                FROM HASHINGS JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
                WHERE HASHES.KENNEL_KY = ? AND HASHINGS.HASHER_KY = ?
) AS TENDERS RIGHT JOIN HASHES ON TENDERS.HASH_KY = HASHES.HASH_KY
WHERE HASHES.KENNEL_KY = ?
ORDER BY EVENT_DATE DESC");

DEFINE("EVENTS_LAST_MISSED_FOR_EACH_HASHER","SELECT
                        S.HASHER_KY,
        S.HASHER_NAME,
        MAX(E.EVENT_DATE) AS LAST_MISSED_DATE
        FROM (
                SELECT
                        HASHINGS.HASHER_KY,
      HASHINGS.HASH_KY,
      HASHES.EVENT_DATE,
      HASHES.KENNEL_KY,
      HASHERS.HASHER_NAME
                FROM HASHINGS
      JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
      JOIN HASHERS ON HASHINGS.HASHER_KY = HASHERS.HASHER_KY
                WHERE HASHINGS.HASH_KY = ?
                ) S
                CROSS JOIN HASHES E
                LEFT JOIN HASHINGS H ON S.HASHER_KY = H.HASHER_KY AND E.HASH_KY = H.HASH_KY
                WHERE
                        H.HASHER_KY IS NULL
        AND E.KENNEL_KY = S.KENNEL_KY
        AND E.EVENT_DATE < S.EVENT_DATE
                GROUP BY S.HASHER_KY
                ORDER BY LAST_MISSED_DATE ASC");









DEFINE("ALL_HASHINGS_IN_ALL_KENNELS_FOR_HASHER","SELECT
        KENNELS.KENNEL_ABBREVIATION,
    HASHES.KENNEL_EVENT_NUMBER,
        HASHES.HASH_KY
FROM
        HASHINGS JOIN HASHES ON HASHINGS.HASH_KY = HASHES.HASH_KY
    JOIN KENNELS ON HASHES.KENNEL_KY = KENNELS.KENNEL_KY
WHERE
        HASHINGS.HASHER_KY = ?
ORDER BY KENNEL_ABBREVIATION, HASHES.EVENT_DATE DESC");

DEFINE("ALL_HARINGS_IN_ALL_KENNELS_FOR_HASHER","SELECT
        KENNELS.KENNEL_ABBREVIATION,
    HASHES.KENNEL_EVENT_NUMBER,
    HASHES.HASH_KY
FROM
        HARINGS JOIN HASHES ON HARINGS.HARINGS_HASH_KY = HASHES.HASH_KY
    JOIN KENNELS ON HASHES.KENNEL_KY = KENNELS.KENNEL_KY
WHERE
        HARINGS_HASHER_KY = ?
ORDER BY KENNEL_ABBREVIATION, HASHES.EVENT_DATE DESC");


*/
